---
- include_tasks: "{{ sf_tasks_dir }}/check_version.yml"

- name: Setup logrotate.conf
  copy:
    src: logrotate.conf
    dest: /etc/logrotate.d/software-factory

- name: Setup ~/.ansible.cfg
  file:
    src: /var/lib/software-factory/ansible/ansible.cfg
    dest: /root/.ansible.cfg
    state: link
    force: yes

- name: Setup git access to remote gerrit
  blockinfile:
    path: /root/.ssh/config
    create: yes
    mode: 0644
    block: |
      {% if 'gerrit' in roles %}
      Host {{ fqdn }}
        User admin
        Port 29418
        IdentityFile /root/.ssh/gerrit_admin
      Host gerrit
        User admin
        Hostname {{ gerrit_host }}
        Port 29418
        IdentityFile /root/.ssh/gerrit_admin
      {% endif %}
      {% for conn in zuul_gerrit_connections|default([]) %}
      Host {{ conn.hostname }}
        User {{ conn.username }}
        Port {{ conn.port|default(29418) }}
      {% endfor %}

- name: Setup a recent git cli for gerrit 3.x
  shell: |
    ln -sf /opt/rh/rh-git218/root/bin/git /bin/git
    for i in /opt/rh/httpd24/root/usr/lib64/*.so.*; do ln -sf $i /lib64; done

- name: Initalize version control for yaml files
  shell: git init .; git add *; git commit -m 'init'
  args:
    chdir: /etc/software-factory/
    creates: /etc/software-factory/.git

- name: Validate remote-repository
  block:
    - name: Validate access to config repository
      command: "git ls-remote {{ config_location }}"
      register: _config_remote_ls

    - name: Force config re-creation if empty remote
      file:
        path: /root/config
        state: absent
      when: not _config_remote_ls.stdout

    - name: Validate access to jobs repository
      command: "git ls-remote {{ sf_jobs_location }}"
      register: _jobs_remote_ls

    - name: Force config re-creation if empty remote
      file:
        path: /root/sf-jobs
        state: absent
      when: not _jobs_remote_ls.stdout
  when: remote_config_repositories

- name: Update ssh public keys if fqdn is updated
  block:
    - name: Get all pubkeys filenames
      shell: ls /var/lib/software-factory/bootstrap-data/ssh_keys/*.pub
      register: pubkeys

    - name: Set hostname in pub keys files
      shell: 'sed -i "s/@.*/@{{ fqdn }}/" {{ item }}'
      args:
        warn: false
      loop: '{{ pubkeys.stdout_lines }}'
  when: update_fqdn


- name: Status page generator
  block:
    - name: Install status page generator
      copy:
        src: status-page-update.py
        dest: /usr/libexec/software-factory/status-page-update.py
        mode: 0555

    - name: Create status directory
      file:
        path: /var/www/status
        state: directory

    - name: Set read access to the zuul DB for zuul user
      mysql_user:
        name: "{{ zuul_mysql_user }}"
        host: "{{ zuul_mysql_host }}"
        password: "{{ zuul_mysql_password }}"
        priv: 'zuul.*:ALL'
        state: present
      no_log: true

    - name: Setup status page update cron
      cron:
        name: update_status_page
        minute: '0'
        hour: '0'
        day: '*'
        job: "/usr/libexec/software-factory/status-page-update.py --lib /var/lib/software-factory/backup/status_history.yaml --output /var/www/status/index.html"
  when: "'zuul' in roles"
