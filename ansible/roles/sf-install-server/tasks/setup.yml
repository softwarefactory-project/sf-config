---
- name: Check for ara.cfg
  stat:
    path: /var/lib/software-factory/ansible/ara.cfg
  register: _ara_cfg

- name: Setup logrotate.conf
  copy:
    src: logrotate.conf
    dest: /etc/logrotate.d/software-factory

- name: Setup ~/.ansible.cfg
  copy:
    src: /var/lib/software-factory/ansible/ara.cfg
    dest: /root/.ansible.cfg
    remote_src: true
  when: _ara_cfg.stat.exists

- name: Setup git access to remote gerrit
  blockinfile:
    path: /root/.ssh/config
    create: yes
    mode: 0644
    block: |
      Host {{ item.hostname }}
        User {{ item.username }}
        Port {{ item.port|default(29418) }}
      {% if 'gerrit' in roles %}
      Host {{ fqdn }}
        User admin
        Port 29418
        IdentityFile /root/.ssh/gerrit_admin
      Host gerrit
        User admin
        Hostname {{ gerrit_host }}
        Port 29418
        IdentityFile /root/.ssh/gerrit_admin
      {% endif %}
  with_items: "{{ zuul_gerrit_connections|default([]) }}"

- name: Setup default ansible.cfg
  copy:
    src: /usr/share/sf-config/ansible/ansible.cfg
    dest: /root/.ansible.cfg
    remote_src: true
  when: not _ara_cfg.stat.exists

- name: Initalize version control for yaml files
  shell: git init .; git add *; git commit -m 'init'
  args:
    chdir: /etc/software-factory/
    creates: /etc/software-factory/.git

- name: Validate remote-repository
  block:
    - name: Validate access to config repository
      command: "git ls-remote {{ config_location }}"
      register: _config_remote_ls

    - name: Force config re-creation if empty remote
      file:
        path: /root/config
        state: absent
      when: not _config_remote_ls.stdout

    - name: Validate access to jobs repository
      command: "git ls-remote {{ sf_jobs_location }}"
      register: _jobs_remote_ls

    - name: Force config re-creation if empty remote
      file:
        path: /root/sf-jobs
        state: absent
      when: not _jobs_remote_ls.stdout
  when: remote_config_repositories

- name: Update ssh public keys if fqdn is updated
  block:
    - name: Get all pubkeys filenames
      shell: ls /var/lib/software-factory/bootstrap-data/ssh_keys/*.pub
      register: pubkeys

    - name: Set hostname in pub keys files
      shell: 'sed -i "s/@.*/@{{ fqdn }}/" {{ item }}'
      args:
        warn: false
      with_items:
        - '{{ pubkeys.stdout_lines }}'
  when: update_fqdn
