#!/bin/env python3
#
# Copyright (C) 2016 Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# This hook will update an issue by:
# - changing its status to in-progess
# - add an issue note with the review URL

# https://gerrit-documentation.storage.googleapis.com/\
#        Documentation/2.8.1/config-hooks.html

# Gerrit will call the hook with the following options:
# patchset-created --change <change id>
#                  --is-draft <boolean>
#                  --change-url <change url>
#                  --project <project name>
#                  --branch <branch>
#                  --topic <topic>
#                  --uploader <uploader>
#                  --commit <sha1>
#                  --patchset <patchset id>
#                  --kind
#                  --change-owner
#                  --newrev

import argparse
import subprocess
import requests

MANAGESF_BASE_URL = "{{ managesf_internal_url }}"

# Parse arguments
p = argparse.ArgumentParser()
for arg in ("change", "is-draft", "change-url", "project", "branch",
            "topic", "submitter", "uploader", "commit", "patchset", "kind",
            "change-owner", "newrev"):
    p.add_argument("--%s" % arg)
payload = p.parse_args().__dict__

# Get commit message
p = subprocess.Popen(["git", "cat-file", "-p", payload['commit']],
                     stdout=subprocess.PIPE)
p.wait()
payload['commit_message'] = p.stdout.read().decode('utf-8')

# Call managesf
r = requests.post("%s/hooks/patchset_created" % MANAGESF_BASE_URL,
                  json=payload, headers={'X-Remote-User': 'SF_SERVICE_USER'})

# Show status
payload['status'] = r.status_code
print("%(project)s %(change)s - %(status)s" % payload)
