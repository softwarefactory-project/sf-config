---
# Use 0751 to let apache access {{ zuul3_lib_dir }}/git
# Use /bin/sh shell to allow zuul to connect to localhost for config-update jobs
- include: "{{ sf_tasks_dir }}/create_user.yml user_name=zuul ssh_key=zuul_rsa home_dir={{ zuul3_lib_dir }} home_dir_mode=0751 shell=/bin/sh update_user=no"

- name: Install zuul3 shortcut
  copy:
    src: zuul3.sh
    dest: /usr/bin/zuul3
    mode: 0755

- name: Apply selinux port labelling
  seport:
    ports: "{{ zuul3_port }}"
    proto: tcp
    setype: http_port_t
    state: present
  when: "ansible_selinux.status == 'enabled' and 'zuul-scheduler' in zuul3_services"

- name: Setup apache zuul3-merger.conf
  template:
    src: zuul3-merger.httpd.conf.j2
    dest: /etc/httpd/conf.d/zuul3-merger.conf
    mode: 0444
  notify: apache reload
  when: "'zuul-merger' in zuul3_services"

- block:
    - name: Pre-Create zuul-jobs rsa key
      become: yes
      become_user: zuul
      command: |
        /opt/rh/rh-python35/root/bin/python -c 'import zuul.configloader
        import zuul.lib.encryption
        class ZuulJobs: pass
        project = ZuulJobs()
        project.name = "zuul-jobs"
        project.private_key_file = "{{ zuul3_lib_dir }}/keys/gerrit/zuul-jobs.pem"
        zuul.configloader.TenantParser._generateKeys(project)
        zuul.configloader.TenantParser._loadKeys(project)
        pub = open("{{ zuul3_lib_dir }}/keys/gerrit/zuul-jobs.pub", "w")
        pub.write(zuul.lib.encryption.serialize_rsa_public_key(project.public_key).decode("utf-8"))
        pub.close()'
      args:
        creates: "{{ zuul3_lib_dir }}/keys/gerrit/zuul-jobs.pub"

    - name: Fetch zuul-jobs pub key on install-server
      fetch:
        flat: yes
        src: "{{ zuul3_lib_dir }}/keys/gerrit/zuul-jobs.pub"
        dest: "/var/lib/software-factory/certs/zuul-jobs.pub"
  when: "'zuul-scheduler' in zuul3_services"

- block:
    - name: Ensure known_hosts file exists
      file:
        path: "{{ zuul3_lib_dir }}/.ssh/known_hosts"
        owner: zuul
        group: zuul
        mode: 0600
        state: touch

    - name: Check if the zuul sources are already defined
      command: "ssh-keygen -f {{ zuul3_lib_dir }}/.ssh/known_hosts -F {{ item.host_packed }}"
      with_items: "{{ zuul3_ssh_known_hosts }}"
      register: _zuul3_known_hosts_results
      ignore_errors: "yes"

    - name: Scan the missing zuul sources
      shell: >
        ssh-keyscan -T 10 -p {{ item.item.port }} {{ item.item.host }} >>
        {{ zuul3_lib_dir }}/.ssh/known_hosts
      with_items: "{{ _zuul3_known_hosts_results.results }}"
      when: item.stdout == ""

    - name: Check zuul user can connect to gerrit connections
      become_user: zuul
      command: >
        ssh -i {{ zuul3_lib_dir }}/.ssh/id_rsa
            -o UserKnownHostsFile={{ zuul3_lib_dir }}/.ssh/known_hosts
            -p {{ item.port|default(29418) }}
            {{ item.username }}@{{ item.hostname }}
      register: _zuul3_connection_test
      failed_when: _zuul3_connection_test.stderr.find("Welcome to Gerrit Code Review") == -1
      with_items: "{{ zuul3_gerrit_connections }}"

    - include: create_logging.yml _logfile="scheduler"
    - include: create_logging.yml _logfile="gearman-server"
  when: "'zuul-scheduler' in zuul3_services or 'zuul-merger' in zuul3_services or 'zuul-executor' in zuul3_services"

- block:
    - include: create_logging.yml _logfile="executor"
  when: "'zuul-executor' in zuul3_services"

- block:
    - include: create_logging.yml _logfile="merger"
  when: "'zuul-merger' in zuul3_services"

- block:
    - include: create_logging.yml _logfile="web"
  when: "'zuul-web' in zuul3_services"

- name: "Setup sysconfig"
  template:
    src: sysconfig.j2
    dest: "{{ zuul3_sysconfig }}"
  notify: restart zuul3

- name: "Setup configuration"
  template:
    src: zuul.conf.j2
    dest: "{{ zuul3_conf_dir }}/zuul.conf"
    mode: 0440
    group: zuul
  notify: restart zuul3

- block:
    - name: "Check if scheduler is running"
      command: systemctl is-active "rh-python35-zuul-scheduler"
      register: zuul_scheduler_service_running
      failed_when: zuul_scheduler_service_running.rc not in [0, 3]

    - name: "Manually create database to avoid concurrency issue"
      command: |
        /opt/rh/rh-python35/root/bin/python -c 'import zuul.cmd
        import configparser
        app = zuul.cmd.ZuulApp()
        app.config = configparser.ConfigParser()
        app.config.read("{{ zuul3_conf_dir }}/zuul.conf")
        app.configure_connections()'
      when: zuul_scheduler_service_running.rc == 3
  when: "'zuul-scheduler' in zuul3_services"
