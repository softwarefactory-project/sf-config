---
- name: "Add the jenkins RPM repository"
  yum_repository:
    name: "{{ jenkins_repo_name }}"
    description: "{{ jenkins_repo_desc }}"
    baseurl: "{{ jenkins_repo_url }}"
    gpgkey: "{{ jenkins_repo_gpgkey }}"
    gpgcheck: "{{ jenkins_repo_gpgcheck }}"

- name: "Install package"
  yum:
    name: "jenkins-1.651.3"
    state: present
    disablerepo: "*"
    enablerepo: "{{ jenkins_repo_name }}"

- name: "Install requirements"
  yum:
    name: "python2-jenkins-job-builder, wget, zuul-cloner, httpd, mod_auth_pubtkt"
    state: present
    disablerepo: "{{ yum_disable_repo|default(omit) }}"
    enablerepo: "{{ yum_enable_repo|default(omit) }}"

# 2.7: we need to remove pbr<2 cap because rdo-pike pulls pbr-3
- name: Remove incorrect pbr cap requirement
  file:
    path: /usr/lib/python2.7/site-packages/python_jenkins-0.4.8-py2.7.egg-info/requires.txt
    state: absent

- name: Cleanup unused files/directories
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/init.d/jenkins
    - /usr/local/jenkins

- name: "Create plugins directory"
  file:
    path: /var/lib/jenkins/plugins
    state: directory

# TODO: "validate_certs: no" was added to fix an issue with ansible 2.4.0
# the validation fails if urllib3-pike is present on the deployment
# should be removed when ansible 2.4.2 will be available on centos 7
# issue: https://github.com/ansible/ansible/pull/32053
- name: "Download plugin (using cache)"
  get_url:
    url: "{{ jenkins_cache_url }}/{{ item.name }}.hpi"
    dest: "/var/lib/jenkins/plugins/{{ item.name }}.hpi"
    checksum: "{{ item.checksum }}"
    validate_certs: no
  with_items: "{{ jenkins_plugins }}"
  when: jenkins_cache_url != ""

# TODO: "validate_certs: no" was added to fix an issue with ansible 2.4.0
# the validation fails if urllib3-pike is present on the deployment
# should be removed when ansible 2.4.2 will be available on centos 7
# issue: https://github.com/ansible/ansible/pull/32053
- name: "Download plugin"
  get_url:
    url: "{{ jenkins_plugins_url }}/{{ item.name }}/{{ item.version }}/{{ item.name }}.hpi"
    dest: "/var/lib/jenkins/plugins/{{ item.name }}.hpi"
    checksum: "{{ item.checksum }}"
    validate_certs: no
  with_items: "{{ jenkins_plugins }}"
  when: jenkins_cache_url == ""
