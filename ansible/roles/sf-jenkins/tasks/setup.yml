---
- include: "{{ sf_tasks_dir }}/create_user.yml user_name=jenkins ssh_key=jenkins_rsa"

- name: Create /etc/jenkins_jobs
  file:
    path: /etc/jenkins_jobs
    owner: jenkins
    group: zuul
    mode: 0550
    state: directory

- name: Install jenkins_jobs.ini
  template:
    src: jenkins_jobs.ini.j2
    dest: /etc/jenkins_jobs/jenkins_jobs.ini
    owner: jenkins
    group: zuul
    mode: 0440

- name: Create working directories
  file:
      path: "{{ item.name }}"
      state: directory
      owner: jenkins
      group: jenkins
      mode: "{{ item.mode | default(0755) }}"
  with_items:
    - {name: /usr/local/share/sf-jenkins-slave-tools}
    - {name: /var/cache/jenkins}
    - {name: /var/lib/jenkins}
    - {name: /var/lib/jenkins/defconf, mode: '0500'}
    - {name: /var/lib/jenkins/plugins}
    - {name: /var/lib/jenkins/init.groovy.d}

- name: Install jenkins-remove-offline cron
  template:
      src: "jenkins-remove-offline-node.sh.j2"
      dest: "/etc/cron.daily/jenkins-remove-offline-node.sh"
      mode: "0555"

- name: Install templates for jenkins user
  template:
      src: "{{ item }}.j2"
      dest: "/var/lib/jenkins/{{ item }}"
      owner: jenkins
      group: jenkins
      mode: "0444"
  with_items:
      - hudson.plugins.gearman.GearmanPluginConfig.xml
      - hudson.plugins.git.GitSCM.xml
      - jenkins.model.JenkinsLocationConfiguration.xml
      - nodeMonitors.xml

- name: Install files for root user
  template:
      src: "{{ item.name }}.j2"
      dest: "{{item.dest}}/{{ item.name }}"
      owner: root
      group: root
      mode: "{{ item.mode | default(0444) }}"
  notify:
      - apache reload
  with_items:
      - {name: jenkins, dest: /etc/sudoers.d, mode: '0440'}
      - {name: jenkins.conf, dest: /etc/httpd/conf.d}
      - {name: ports.conf, dest: /etc/httpd/conf.d}
      - {name: remove-offline-node.groovy, dest: /var/lib/jenkins/}
      - {name: wait4jenkins, dest: /usr/libexec, mode: '0555'}

- name: Install files for jenkins user
  copy:
      src: "{{ item.name }}"
      dest: "/var/lib/jenkins/{{ item.name }}"
      owner: jenkins
      group: jenkins
      mode: "{{ item.mode | default(0444) }}"
      force: "{{ item.force | default('yes') }}"
  with_items:
      - {name: config.xml, mode: '0644', force: no}
      - {name: credentials.xml, mode: '0644', force: no}
      - {name: hudson.tasks.Mailer.xml}
      - {name: org.codefirst.SimpleThemeDecorator.xml}
      - {name: org.jenkinsci.main.modules.sshd.SSHD.xml}
      - {name: org.jenkinsci.plugins.ZMQEventPublisher.HudsonNotificationProperty.xml}

- name: Install init.groovy.d scripts
  template:
      src: "{{ item }}.j2"
      dest: "/var/lib/jenkins/init.groovy.d/{{ item }}"
      owner: jenkins
      group: jenkins
      mode: 0444
      force: yes
  with_items:
    - service_user_credentials.groovy
    - cli-shutdown.groovy

- name: Fix passlib version weirdness (invalid version number '1.7.0.post20170223134505')
  copy: content="__version__ = '1.7.0'" dest=/usr/lib/python2.7/site-packages/passlib/__init__.py

- name: Manage jenkins user password for apache
  htpasswd:
      path: /etc/httpd/htpasswd
      name: jenkins
      password: "{{ jenkins_password }}"

- name: Apply selinux port labelling
  seport:
      ports: "{{ item }}"
      proto: tcp
      setype: http_port_t
      state: present
  with_items: ["{{ jenkins_http_port}}", "{{ jenkins_api_port }}"]
  when: ansible_selinux.status == "enabled"

- name: Install service file
  template:
      src: jenkins.service.j2
      dest: /lib/systemd/system/jenkins.service
      owner: root
      group: root
      mode: 0644

- name: Start service
  systemd:
      name: jenkins
      state: started
      daemon_reload: yes
      enabled: yes
