---
- name: Wait for db initialization
  wait_for:
    port: 8086
    host: '{{ influxdb_host }}'

- name: Set influxdb cli fact
  set_fact:
    influxdb_cli: 'influx -ssl -host {{ influxdb_host }} -port 8086'

- name: Check if admin password is set
  shell: '{{ influxdb_cli }} -execute "SHOW USERS"'
  register: admin_password
  failed_when: false
  changed_when: false
  no_log: true

- name: Create admin user
  shell: "{{ influxdb_cli }} -execute \"CREATE USER admin WITH PASSWORD '{{ influxdb_admin_password }}' WITH ALL PRIVILEGES\""
  when: "'create admin user' in admin_password.stdout"
  no_log: true

- name: Set influxdb cli fact
  set_fact:
    influxdb_cli: '{{ influxdb_cli }} -username admin -password {{ influxdb_admin_password }}'

- name: Check if telegraf db exists
  shell: '{{ influxdb_cli }} -execute "SHOW DATABASES"'
  register: databases
  changed_when: false
  no_log: true

- name: Create telegraf db
  shell: '{{ influxdb_cli }} -execute "CREATE DATABASE telegraf"'
  when: "'telegraf' not in databases.stdout"

- name: Check if telegraf user exists
  shell: '{{ influxdb_cli }} -execute "SHOW USERS"'
  register: users
  changed_when: false
  no_log: true

- block:
    - name: Create telegraf user
      shell: "{{ influxdb_cli }} -execute \"CREATE USER telegraf WITH PASSWORD '{{ telegraf_influxdb_password }}'\""

    - name: Grant access for telegraf user
      shell: "{{ influxdb_cli }} -execute 'GRANT ALL ON \"telegraf\" TO \"telegraf\"'"
  ignore_errors: true
  no_log: true
  when: "'telegraf' not in users.stdout"

- name: Create continuous query
  command: >
    sf-graph-render --influxdb-host "{{ influxdb_host }}"
                    --influxdb-password "{{ influxdb_admin_password }}"
                    update-cq
  register: _update_cq
  failed_when: _update_cq.rc not in [0, 4]
  changed_when: _update_cq.rc == 4
