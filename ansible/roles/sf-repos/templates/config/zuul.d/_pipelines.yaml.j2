# This file is managed by ansible, do not edit directly
---
{% if zuul_gerrit_connections_pipelines or zuul_github_connections_pipelines %}
- pipeline:
    name: check
    description: |
      Newly uploaded patchsets enter this pipeline to receive an
      initial +/-1 Verified vote.
    manager: independent
{% if zuul_gerrit_connections_pipelines %}
    require:
{% for gerrit_connection in zuul_gerrit_connections_pipelines %}
      {{ gerrit_connection.name }}:
        open: True
        current-patchset: True
{% endfor %}
{% endif %}
    trigger:
{% for gerrit_connection in zuul_gerrit_connections_pipelines %}
      {{ gerrit_connection.name }}:
        - event: patchset-created
        - event: comment-added
          comment: (?i)^(Patch Set [0-9]+:)?( [\w\\+-]*)*(\n\n)?\s*(recheck|reverify)
{% endfor %}
{% for github_connection in zuul_github_connections_pipelines %}
      {{ github_connection.name }}:
        - event: pull_request
          action:
            - opened
            - changed
            - reopened
        - event: pull_request
          action: comment
          comment: (?i)^\s*recheck\s*$
{% endfor %}
    start:
{% for github_connection in zuul_github_connections_pipelines %}
      {{ github_connection.name }}:
        status: 'pending'
        status-url: "{{ tenant_status_page_url }}"
        comment: false
{% endfor %}
{% for gerrit_connection in zuul_gerrit_connections_pipelines %}
      {{ gerrit_connection.name }}:
        verified: 0
{% endfor %}
{% if 'firehose' in roles %}
      mqtt:
        topic: "{{ zuul_mqtt_start_topic }}"
{% endif %}
    success:
{% for github_connection in zuul_github_connections_pipelines %}
      {{ github_connection.name }}:
        status: 'success'
{% endfor %}
{% for gerrit_connection in zuul_gerrit_connections_pipelines %}
      {{ gerrit_connection.name }}:
        verified: 1
{% endfor %}
      sqlreporter:
{% if 'firehose' in roles %}
      mqtt:
        topic: "{{ zuul_mqtt_success_topic }}"
{% endif %}
    failure:
{% for github_connection in zuul_github_connections_pipelines %}
      {{ github_connection.name }}:
        status: 'failure'
{% endfor %}
{% for gerrit_connection in zuul_gerrit_connections_pipelines %}
      {{ gerrit_connection.name }}:
        verified: -1
{% endfor %}
      sqlreporter:
{% if 'firehose' in roles %}
      mqtt:
        topic: "{{ zuul_mqtt_failure_topic }}"
{% endif %}
{% if zuul_gate_pipeline %}

- pipeline:
    name: gate
    description: |
      Changes that have been approved by core developers are enqueued
      in order in this pipeline, and if they pass tests, will be
      merged.
    success-message: Build succeeded (gate pipeline).
    failure-message: |
      Build failed (gate pipeline).  For information on how to proceed, see
      http://docs.openstack.org/infra/manual/developers.html#automated-testing
    manager: dependent
    precedence: high
    require:
{% for gerrit_connection in zuul_gerrit_connections_pipelines %}
      {{ gerrit_connection.name }}:
        open: True
        current-patchset: True
        approval:
          - Verified: [1, 2]
            username: zuul
          - Workflow: 1
{% endfor %}
{% for github_connection in zuul_github_connections_pipelines %}{% if github_connection.app_name|default(False) %}
      {{ github_connection.name }}:
        review:
          # Require an approval from user with write access (e.g. core-reviewer)
          - permission: write
            type: approved
{% if github_connection.label_name|default(False) %}
        # Require label
        label: {{ github_connection.label_name }}
{% endif %}
        status: "{{ github_connection.app_name }}\\[bot\\]:{{ tenant_name }}/check:success"
        open: True
        current-patchset: True
{% endif %}{% endfor %}
    trigger:
{% for gerrit_connection in zuul_gerrit_connections_pipelines %}
      {{ gerrit_connection.name }}:
        - event: comment-added
          approval:
            - Workflow: 1
        - event: comment-added
          approval:
            - Verified: 1
          username: zuul
{% endfor %}
{% for github_connection in zuul_github_connections_pipelines %}{% if github_connection.app_name|default(False) %}
      {{ github_connection.name }}:
        - event: pull_request_review
          action: submitted
          state: approved
        - event: pull_request
          action: comment
          comment: (?i)^\s*regate\s*$
        - event: pull_request_review
          action: submitted
          state: approved
        - event: pull_request_review
          action: dismissed
          state: request_changes
        - event: pull_request
          action: status
          status: "{{ github_connection.app_name }}\\[bot\\]:{{ tenant_name }}/check:success"
{% if github_connection.label_name|default(False) %}
        - event: pull_request
          action: labeled
          label:
            - {{ github_connection.label_name }}
{% endif %}
{% endif %}{% endfor %}
    start:
{% for gerrit_connection in zuul_gerrit_connections_pipelines %}
      {{ gerrit_connection.name }}:
        Verified: 0
{% endfor %}
{% for github_connection in zuul_github_connections_pipelines %}
      {{ github_connection.name }}:
        status: 'pending'
        status-url: "{{ tenant_status_page_url }}"
        comment: false
{% endfor %}
{% if 'firehose' in roles %}
      mqtt:
        topic: "{{ zuul_mqtt_start_topic }}"
{% endif %}
    success:
{% for gerrit_connection in zuul_gerrit_connections_pipelines %}
      {{ gerrit_connection.name }}:
        Verified: 2
        submit: true
{% endfor %}
{% for github_connection in zuul_github_connections_pipelines %}{% if github_connection.app_name|default(False) %}
      {{ github_connection.name }}:
        status: 'success'
        merge: true
        comment: true
{% endif %}{% endfor %}
      sqlreporter:
{% if 'firehose' in roles %}
      mqtt:
        topic: "{{ zuul_mqtt_success_topic }}"
{% endif %}
    failure:
{% for gerrit_connection in zuul_gerrit_connections_pipelines %}
      {{ gerrit_connection.name }}:
        Verified: -2
{% endfor %}
{% for github_connection in zuul_github_connections_pipelines %}{% if github_connection.app_name|default(False) %}
      {{ github_connection.name }}:
        status: 'failure'
        comment: true
{% endif %}{% endfor %}
      sqlreporter:
{% if 'firehose' in roles %}
      mqtt:
        topic: "{{ zuul_mqtt_failure_topic }}"
{% endif %}
    window-floor: 20
    window-increase-factor: 2
{% endif %}

- pipeline:
    name: post
    post-review: true
    description: This pipeline runs jobs that operate after each change is merged.
    manager: independent
    precedence: low
    trigger:
{% for gerrit_connection in zuul_gerrit_connections_pipelines %}
      {{ gerrit_connection.name }}:
        - event: ref-updated
          ref: ^refs/heads/.*$
{% endfor %}
{% for github_connection in zuul_github_connections_pipelines %}
      {{ github_connection.name }}:
        - event: push
          ref: ^refs/heads/.*$
{% endfor %}
{% if 'firehose' in roles %}
    start:
      mqtt:
        topic: "{{ zuul_mqtt_start_topic }}"
{% endif %}
    success:
      sqlreporter:
{% if 'firehose' in roles %}
      mqtt:
        topic: "{{ zuul_mqtt_success_topic }}"
{% endif %}
    failure:
      smtp:
        from: "zuul@{{ fqdn }}"
        to: "{{ zuul_periodic_pipeline_mail_rcpt }}"
        subject: '[Zuul] Job failed in post pipeline: {change.project}'
      sqlreporter:
{% if 'firehose' in roles %}
      mqtt:
        topic: "{{ zuul_mqtt_failure_topic }}"
{% endif %}

- pipeline:
    name: pre-release
    description: When a commit is tagged with a pre-release tag, this pipeline runs jobs that publish archives and documentation.
    manager: independent
    precedence: high
    post-review: True
    trigger:
{% for gerrit_connection in zuul_gerrit_connections_pipelines %}
      {{ gerrit_connection.name }}:
        - event: ref-updated
          ref: ^refs/tags/{{ zuul.prerelease_regexp }}$
{% endfor %}
{% for github_connection in zuul_github_connections_pipelines %}
      {{ github_connection.name }}:
        - event: push
          ref: ^refs/tags/{{ zuul.prerelease_regexp }}$
{% endfor %}
    success:
      sqlreporter:
{% if 'firehose' in roles %}
      mqtt:
        topic: "{{ zuul_mqtt_success_topic }}"
{% endif %}
    failure:
      sqlreporter:
{% if 'firehose' in roles %}
      mqtt:
        topic: "{{ zuul_mqtt_failure_topic }}"
{% endif %}
      smtp:
        from: "zuul@{{ fqdn }}"
        to: "{{ zuul_periodic_pipeline_mail_rcpt }}"
        subject: '[Zuul] Job failed in pre-release pipeline: {change.project}'

- pipeline:
    name: release
    post-review: true
    description: When a commit is tagged as a release, this pipeline runs jobs that publish archives and documentation.
    manager: independent
    precedence: high
    trigger:
{% for gerrit_connection in zuul_gerrit_connections_pipelines %}
      {{ gerrit_connection.name }}:
        - event: ref-updated
          ref: ^refs/tags/{{ zuul.release_regexp }}$
{% endfor %}
{% for github_connection in zuul_github_connections_pipelines %}
      {{ github_connection.name }}:
        - event: push
          ref: ^refs/tags/{{ zuul.release_regexp }}$
{% endfor %}
{% if 'firehose' in roles %}
    start:
      mqtt:
        topic: "{{ zuul_mqtt_start_topic }}"
{% endif %}
    success:
      sqlreporter:
{% if 'firehose' in roles %}
      mqtt:
        topic: "{{ zuul_mqtt_success_topic }}"
{% endif %}
    failure:
      smtp:
        from: "zuul@{{ fqdn }}"
        to: "{{ zuul_periodic_pipeline_mail_rcpt }}"
        subject: '[Zuul] Job failed in release pipeline: {change.project}'
      sqlreporter:
{% if 'firehose' in roles %}
      mqtt:
        topic: "{{ zuul_mqtt_failure_topic }}"
{% endif %}

{% endif %}
- pipeline:
    name: periodic
    post-review: true
    description: Jobs in this queue are triggered daily.
    manager: independent
    precedence: low
    trigger:
      timer:
        - time: '0 0 * * *'
{% if 'firehose' in roles %}
    start:
      mqtt:
        topic: "{{ zuul_mqtt_start_topic }}"
{% endif %}
    success:
      sqlreporter:
{% if 'firehose' in roles %}
      mqtt:
        topic: "{{ zuul_mqtt_success_topic }}"
{% endif %}
    failure:
      smtp:
        from: "zuul@{{ fqdn }}"
        to: "{{ zuul_periodic_pipeline_mail_rcpt }}"
        subject: '[Zuul] Job failed in periodic pipeline: {change.project}'
      sqlreporter:
{% if 'firehose' in roles %}
      mqtt:
        topic: "{{ zuul_mqtt_failure_topic }}"
{% endif %}

- pipeline:
    name: merge-check
    description: >
      Each time a change merges, this pipeline verifies that all open changes
      on the same project are still mergeable.
    failure-message: Build failed (merge-check pipeline).
    manager: independent
    ignore-dependencies: true
    precedence: low
    trigger: {}
