---
# These are default jobs to run test on a all in on RDO deployment

- builder:
    name: fetch-rdo-artifacts
    builders:
      - shell: |
          set +e
          [ -d artifacts/system_logs ] || mkdir -p artifacts/system_logs
          echo "Fetching rdo artifacts"
          sudo cp -R /var/log/*/ artifacts/system_logs
          sudo chown -R ${USER} artifacts/system_logs
          echo "List openstack package version"
          rpm -qa | grep openstack

- publisher:
    name: fetch-rdo-artifacts
    publishers:
      - postbuildscript:
          builders:
            - fetch-rdo-artifacts
          script-only-if-succeeded: false
          script-only-if-failed: false

- builder:
    name: nested-cloud-prepare
    builders:
      - shell: |
          export OS_PASSWORD=sf4ever
          time /usr/local/bin/nested_cloud_prep.sh

- builder:
    name: rdo-check
    builders:
      - shell: |
          export OS_PASSWORD=sf4ever
          export OS_AUTH_URL=http://localhost:5000/v2.0
          export OS_REGION_NAME=RegionOne
          export OS_USERNAME=sfmain
          export OS_TENANT_NAME=sfmain
          echo "[+] Starting cirros"
          NET_ID=$(neutron net-list | grep $OS_TENANT_NAME | awk '{ print $2 }')
          nova boot --flavor m1.tiny --image cirros --key-name id_rsa --nic net-id=${NET_ID} watchdog
          sleep 5
          FLOATING=$(neutron floatingip-create external_network | grep floating_ip_address | awk '{ print $4 }')
          nova add-floating-ip watchdog ${FLOATING}
          ping -c 1 -w 5 ${FLOATING}

- job-template:
    name: '{name}-openstack-functional-tests'
    defaults: global
    builders:
      - prepare-workspace
      - nested-cloud-prepare
      - shell: |
          export OS_PASSWORD=sf4ever
          export OS_AUTH_URL=http://localhost:5000/v2.0
          export OS_REGION_NAME=RegionOne
          export OS_USERNAME=sfmain
          export OS_TENANT_NAME=sfmain
          cd $ZUUL_PROJECT && ./run_functional-tests.sh
    publishers:
      - fetch-rdo-artifacts
    triggers:
      - zuul
    node: '{node}'
