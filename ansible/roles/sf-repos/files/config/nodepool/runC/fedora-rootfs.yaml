- name: Set fedora version fact
  set_fact:
    fedora_version: 28
    target_dir: /srv/f28

- name: Set bwrap command fact
  set_fact:
    bwrap_command: "bwrap --unshare-pid --bind {{ target_dir }} / --proc /proc --dev /dev"

- name: Extract fedora image
  shell: |
    set -ex
    skopeo copy docker://fedora:{{ fedora_version }} dir:{{ target_dir }}-cache
    mkdir -p {{ target_dir }}
    tar -C {{ target_dir }} -xzf {{ target_dir }}-cache/$(python -c "import json; print(json.load(open('{{ target_dir }}-cache/manifest.json'))['layers'][0]['digest']).split(':')[1]")
    cp /etc/resolv.conf /srv/f{{ fedora_version }}/etc/resolv.conf
    {{ bwrap_command }} dnf install -y openssh-server
    rm -Rf {{ target_dir }}-cache
  args:
    creates: "{{ target_dir }}/sbin/sshd"

- name: Create sshd server keys
  command: "{{ bwrap_command }} /usr/libexec/openssh/sshd-keygen rsa"
  args:
    creates: "{{ target_dir }}/etc/ssh/ssh_host_rsa_key"

- name: Read host user id
  command: awk -F ":" '/zuul-worker/ { print $3 }' /etc/passwd
  register: _host_uid

- name: Create zuul-worker user
  command: "{{ bwrap_command }} useradd -u {{ _host_uid.stdout }} -m zuul-worker"
  args:
    creates: "{{ target_dir }}/home/zuul-worker"

- name: Create /home/zuul-worker/.ssh
  file:
    path: "{{ target_dir }}/home/zuul-worker/.ssh"
    state: directory
    mode: 0700
    owner: zuul-worker

- name: Adds ssh key
  copy:
    src: /var/lib/software-factory/bootstrap-data/ssh_keys/zuul_rsa.pub
    dest: "{{ target_dir }}/home/zuul-worker/.ssh/authorized_keys"
    owner: zuul-worker

- name: Ensure src dir exists
  file:
    path: "{{ target_dir }}/home/zuul-worker/src"
    state: directory
    owner: zuul-worker

- name: Install packages
  command: "{{ bwrap_command }} dnf install -y python3-pip yamllint python3-flake8 python3-tox traceroute rpm-build python3-sphinx python3-pelican"

- name: Install pip packages
  command: "{{ bwrap_command }} pip3 install bashate doc8"
