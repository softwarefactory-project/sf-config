---
- stat:
    path: /root/config/zuulV3
  register: zuulv3_config_dir

- block:
    - name: Create default zuulV3 config
      command: "{{ item }}"
      args:
        chdir: /root/config
      with_items:
        - git fetch --all
        - git reset --hard origin/master --
        - git clean -f -x -d
        - cp -R /usr/share/sf-config/ansible/roles/sf-repos/files/config/zuulV3/ .
        - git add zuulV3
        - git commit -m 'Add zuulV3 configuration'
        - git push git+ssh://gerrit/config master
  when: zuulv3_config_dir.stat.exists != True

- stat:
    path: /root/config/nodepool/nodepoolV3.yaml
  register: nodepoolv3_config_file

- block:
    - name: Create default nodepoolV3 config
      command: "{{ item }}"
      args:
        chdir: /root/config
      with_items:
        - git fetch --all
        - git reset --hard origin/master --
        - git clean -f -x -d
        - cp /usr/share/sf-config/ansible/roles/sf-repos/files/config/nodepool/nodepoolV3.yaml nodepool/
        - git add nodepool
        - git commit -m 'Add nodepoolV3 configuration'
        - git push git+ssh://gerrit/config master
  when: nodepoolv3_config_file.stat.exists != True

- stat:
    path: /root/zuul-jobs
  register: zuul_jobs_done

- block:
    - name: Check if repository exists
      command: python -c "import requests; print('zuul-jobs' in requests.get('{{ managesf_internal_url }}/resources').json().get('resources', {}).get('repos', {}))"
      register: jobs_resource

    - name: Create empty resources file
      shell: "echo 'resources: {}' > /root/empty_resources.yaml"
      when: jobs_resource.stdout == 'False'

    - name: Create repository
      command: "{{ item }}"
      args:
        chdir: /root/config
      with_items:
        - git fetch --all
        - git reset --hard origin/master --
        - git clean -f -x -d
        - /usr/share/sf-config/scripts/create_project_resources.py --repo zuul-jobs --core admin@{{ fqdn }} resources/_zuul-jobs.yaml
        - /usr/local/bin/resources.sh direct_apply /root/empty_resources.yaml resources/_zuul-jobs.yaml
        - git add resources/_zuul-jobs.yaml
        - git commit -m 'Create zuul-jobs repository'
        - git push git+ssh://gerrit/config master
      when: jobs_resource.stdout == 'False'

    - name: Create a temporary clone directory
      command: mktemp -d
      register: jobs_tmp

    - name: Clone the zuul-jobs repository
      git:
        repo: git+ssh://gerrit/zuul-jobs
        dest: "{{ jobs_tmp.stdout }}"

    - name: Sync /usr/share/sf-config/zuul-jobs
      command: "rsync -a /usr/share/sf-config/zuul-jobs/ {{ jobs_tmp.stdout }}/"

    - name: Setup default definitions
      template:
        src: "zuul-jobs/zuul.d/{{ item }}.j2"
        dest: "{{ jobs_tmp.stdout }}/zuul.d/{{ item }}"
      with_items:
        - "_jobs-base.yaml"
        - "_pipelines.yaml"

    - name: Change logserver ip in base/posts
      command: "sed -i 's/LOGSERVER/{{ logserver_host }}/' {{ jobs_tmp.stdout }}/playbooks/base/post.yaml"

    - name: Push zuul jobs repo
      command: "git {{ item }}"
      args:
        chdir: "{{ jobs_tmp.stdout }}"
      with_items:
        - "add -A"
        - "commit -m 'Initialize zuul-jobs repository'"
        - "push git+ssh://gerrit/zuul-jobs master"

    - name: Save zuul jobs repo
      command: "mv {{ jobs_tmp.stdout }} /root/zuul-jobs"
  when: zuul_jobs_done.stat.exists != True
