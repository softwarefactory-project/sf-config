---
- stat:
    path: /root/config
  register: config_done

- name: Create empty resources file
  copy:
    content: 'resources: {}'
    dest: /var/lib/software-factory/bootstrap-data/empty_resources.yaml

- name: Create default resources file
  template:
    src: "config/resources/resources.yaml.j2"
    dest: "/var/lib/software-factory/bootstrap-data/resources.yaml"

- block:
    - name: Make a first admin connexion through SF SSO (force sf_users admin id:1)
      command: sfmanager sf_user list

    - name: Create config repository resources
      command: /usr/local/bin/resources.sh direct_apply /var/lib/software-factory/bootstrap-data/empty_resources.yaml /var/lib/software-factory/bootstrap-data/resources.yaml
  when:
    - config_done.stat.exists != True
    - "'gerrit' in roles"

- include_tasks: create_local_repo.yml repo_name=config
  when:
    - config_done.stat.exists != True
    - "'gerrit' not in roles"

- block:
    # Clone the config repo
    - command: mktemp -d
      register: conf_tmp

    - name: Clone the config repository
      git:
        repo: "{{ config_location }}"
        dest: "{{conf_tmp.stdout}}"

    # Prepare the config repo
    - name: Copy the default config repo files
      command: rsync -av /usr/share/sf-config/ansible/roles/sf-repos/files/config/ {{ conf_tmp.stdout }}/

    - name: Create resources directory
      file:
        path: "{{ conf_tmp.stdout }}/resources/"
        state: directory

    - name: Copy default resources file
      copy:
        src: /var/lib/software-factory/bootstrap-data/resources.yaml
        dest: "{{ conf_tmp.stdout }}/resources/resources.yaml"
        remote_src: yes

    - set_fact:
        config_clone_dir: "{{ conf_tmp.stdout }}"

    - include_tasks: sync_config_repo_content.yml
      when: "'zuul' in roles"

    # Commit
    - name: Push config repo
      command: "git {{ item }}"
      args:
        chdir: "{{ conf_tmp.stdout }}"
      with_items:
        - "add -A"
        - "commit -m 'Initialize config repository'"
        - "push {{ config_location }} master"

    - command: mv {{ conf_tmp.stdout }} /root/config
  when: config_done.stat.exists != True
