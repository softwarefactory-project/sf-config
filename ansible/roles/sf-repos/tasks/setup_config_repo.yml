---
- stat:
    path: /root/config
  register: config_done

- block:
    - name: Make a first admin connexion through SF SSO (force sf_users admin id:1)
      command: sfmanager sf_user list

    # Create the config repo
    - name: Copy default resources file
      command: cp /usr/share/sf-config/ansible/roles/sf-repos/files/config/resources/resources.yaml /root/resources.yaml

    - name: Change default admin email in default resources file
      replace:
        dest: /root/resources.yaml
        regexp: '@sftests.com'
        replace: "@{{ fqdn }}"

    - name: Create empty resources file
      shell: "echo 'resources: {}' > /root/empty_resources.yaml"

    - name: Create config repository resources
      command: /usr/local/bin/resources.sh direct_apply /root/empty_resources.yaml /root/resources.yaml
  when:
    - config_done.stat.exists != True
    - not remote_config_repositories
    - "'gerrit' in roles"

- include_tasks: create_local_repo.yml repo_name=config
  when:
    - config_done.stat.exists != True
    - not remote_config_repositories
    - "'gerrit' not in roles"

- block:
    # Clone the config repo
    - command: mktemp -d
      register: conf_tmp

    - name: Clone the config repository
      git:
        repo: "{{ config_location }}"
        dest: "{{conf_tmp.stdout}}"
      ignore_errors: true
      register: _git_output

    - name: Check if master branch was missing
      fail: msg="{{ output.msg }}"
      when: "'Failed to checkout branch master' not in _git_output.msg"

    - name: Copy the default config repo files
      command: rsync -av /usr/share/sf-config/ansible/roles/sf-repos/files/config/ {{ conf_tmp.stdout }}/

    - name: Copy default resources file
      command: mv /root/resources.yaml "{{ conf_tmp.stdout }}/resources/resources.yaml"
      when: "'managesf' in roles"

    - name: Remove dlrn if not enabled
      file:
        path: "{{ conf_tmp.stdout }}/dlrn"
        state: absent
      when: "'dlrn' not in roles"

    - name: Remove metrics if not enabled
      file:
        path: "{{ conf_tmp.stdout }}/metrics"
        state: absent
      when: "'grafana' not in roles"

    - name: Remove policies if managesf is not enabled
      file:
        path: "{{ conf_tmp.stdout }}/policies"
        state: absent
      when: "'managesf' not in roles"

    - name: Remove dashboard if gerrit is not enabled
      file:
        path: "{{ conf_tmp.stdout }}/{{ item }}"
        state: absent
      with_items:
        - dashboards
        - gerrit
      when: "'gerrit' not in roles"

    - name: Remove gerritbot if not enabled
      file:
        path: "{{ conf_tmp.stdout }}/gerritbot"
        state: absent
      when: "'gerritbot' not in roles"

    - name: Remove repoxplorer if not enabled
      file:
        path: "{{ conf_tmp.stdout }}/repoxplorer"
        state: absent
      when: "'repoxplorer' not in roles"

    - name: Remove mirrors if not enabled
      file:
        path: "{{ conf_tmp.stdout }}/mirrors"
        state: absent
      when: "'mirror' not in roles"

    - set_fact:
        config_clone_dir: "{{ conf_tmp.stdout }}"

    - include_tasks: sync_config_repo_content.yml
      when: "'zuul' in roles"

    # Commit
    - name: Push config repo
      command: "git {{ item }}"
      args:
        chdir: "{{ conf_tmp.stdout }}"
      with_items:
        - "add -A"
        - "commit -m 'Initialize config repository'"
        - "push {{ config_location }} master"

    - command: mv {{ conf_tmp.stdout }} /root/config
  when: config_done.stat.exists != True
