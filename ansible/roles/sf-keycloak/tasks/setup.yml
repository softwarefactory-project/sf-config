---
# Use real shell for replication tests. TODO: improve replication test and set /sbin/nologin shell
# TODO: check if keycloak user is needed
# - name: Create keycloak user
#   include_tasks: "{{ sf_tasks_dir }}/create_user.yml user_name=keycloak ssh_key=keycloak_service_rsa shell=/bin/bash home_dir_mode=0755"

# TODO:
# - check how to use ansible xml module
# - check how to use mysql instead h2
# - configure gerrit with keycloak


- name: Install configuration files
  template:
    src: "{{ item.name }}.j2"
    dest: "{{ item.path }}/{{ item.name }}"
    owner: "{{ item.user | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode }}"
    backup: yes
  loop:
    - {name: standalone.xml,
       path: /opt/jboss/keycloak/standalone/configuration/,
       mode: '0440',
       user: keycloak,
       group: keycloak}
    - {name: keycloak-vhost.conf,
       path: /etc/httpd/conf.d/,
       mode: '0440'}
  notify:
    - restart keycloak
    - apache reload

- name: Check if admin user is already created
  stat:
    path: /opt/jboss/keycloak/standalone/configuration/keycloak-add-user.json
  register: _keycloak_user_file

- name: Create admin user
  shell: /opt/jboss/keycloak/bin/add-user-keycloak.sh -r master -u admin -p {{ authentication.admin_password }}
  when: not _keycloak_user_file.stat.exists

- name: Start service
  service:
    name: keycloak
    state: started
    enabled: "yes"

- name: check for default realm
  shell: /opt/jboss/keycloak/bin/kcadm.sh get realms/default --no-config --server http://127.0.0.1:{{ keycloak_port }}/auth --realm master --user admin --password {{ authentication.admin_password }}
  register: _default_realm

- name: Create default realm
  shell: /opt/jboss/keycloak/bin/kcadm.sh create realms -s realm=default -s enabled=true --no-config --server http://127.0.0.1:{{ keycloak_port }}/auth --realm master --user admin --password {{ authentication.admin_password }}
  when: _default_realm.rc != 0

# TODO check identity providers exist before re-creating them

- name: Create GitHub identity provider
  shell: kcadm.sh create identity-provider/instances -r default -s alias=github -s providerId=github -s enabled=true  -s 'config.useJwksUrl="true"' -s config.clientId={{ authentication.oauth2.github.client_id }} -s config.clientSecret={{ authentication.oauth2.github.client_secret }}  --no-config --server http://127.0.0.1:{{ keycloak_port }}/auth --realm master --user admin --password {{ authentication.admin_password }}
  when: not authentication.oauth2.github.disabled
