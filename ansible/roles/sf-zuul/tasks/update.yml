---
- name: Ensure jobs-zuul ensure locally
  file:
    path: /root/config/jobs-zuul
    state: directory

- name: Fetch zuul pages jobs from the pages node
  synchronize:
    src: /var/lib/pagesuser/zuul_pages.yaml
    dest: /etc/zuul/_pages.yaml
  delegate_to: "{{ pages_host }}"
  register: pagesconfig
  when: "'pages' in roles"

- name: Copy zuul/_pages.yaml for processing
  copy:
    src: /etc/zuul/_pages.yaml
    dest: /root/config/zuul/_pages.yaml
    remote_src: true
  when: "'pages' in roles"

- name: Update zuul layout
  command: "{{ item }}"
  args:
    chdir: /root/config
  with_items:
    - bash -c "/usr/local/bin/yaml-merger.py zuul | tee /etc/zuul/layout.yaml"
    - bash -c "cp zuul/*.py /etc/zuul/ || true"
    - rsync -a --delete jobs-zuul/ /etc/zuul/jobs/

- name: Enable slave reuse when nodepool is not enabled
  when: zuul_offline_node_when_complete == False
  replace:
    dest: /etc/zuul/layout.yaml
    regexp: 'set_node_options'
    replace: 'set_node_reuse'

- file:
    path: /var/lib/software-factory/state/zuul_config
    state: touch

- name: Check local config
  command: cat /var/lib/software-factory/state/zuul_config
  register: localconfig

- name: Check upstream config
  command: git log --oneline zuul/ jobs-zuul/
  args:
    chdir: /root/config
  register: upstreamconfig

- name: Reload zuul-server service
  service:
    name: zuul-server
    state: reloaded
    enabled: "yes"
  when: "'zuul-server' in zuul_services and (localconfig.stdout != upstreamconfig.stdout or ('pages' in roles and pagesconfig|changed))"

- name: Reload zuul-launcher service
  service:
    name: zuul-launcher
    state: reloaded
    enabled: "yes"
  when: "'zuul-launcher' in zuul_services and (localconfig.stdout != upstreamconfig.stdout or ('pages' in roles and pagesconfig|changed))"

# Zuul-merger doesn't support reload, restart is needed
- name: Restart zuul-merger service
  service:
    name: zuul-merger
    state: restarted
    enabled: "yes"
  when: "'zuul-merger' in zuul_services and (localconfig.stdout != upstreamconfig.stdout or ('pages' in roles and pagesconfig|changed))"

- name: Write config repo sha1 matching current configuration
  copy:
    content: "{{ upstreamconfig.stdout }}"
    dest: /var/lib/software-factory/state/zuul_config
  when: localconfig.stdout != upstreamconfig.stdout
