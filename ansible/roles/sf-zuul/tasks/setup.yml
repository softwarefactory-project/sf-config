---
# Use 0751 to let apache access /var/lib/zuul/git
# Use /bin/sh shell to allow zuul to connect to localhost for config-update jobs
- include: "{{ sf_tasks_dir }}/create_user.yml user_name=zuul ssh_key=jenkins_rsa home_dir_mode=0751 shell=/bin/sh"

- name: Authorize zuul localhost connection for config-update jobs
  authorized_key:
    user: zuul
    key: "{{ jenkins_rsa_pub }}"
  when: "'zuul-launcher' in zuul_services"

- name: Apply selinux port labelling
  seport:
    ports: "{{ zuul_port }}"
    proto: tcp
    setype: http_port_t
    state: present
  when: "ansible_selinux.status == 'enabled' and 'zuul-server' in zuul_services"

- name: Setup apache site zuul.conf
  template:
    src: zuul-server.httpd.conf.j2
    dest: /etc/httpd/conf.d/zuul.conf
    mode: 0444
  notify: apache reload
  when: "'zuul-server' in zuul_services"

- name: Setup apache zuul-merger.conf
  template:
    src: zuul-merger.httpd.conf.j2
    dest: /etc/httpd/conf.d/zuul-merger.conf
    mode: 0444
  notify: apache reload
  when: "'zuul-merger' in zuul_services"

- block:
    - name: Create config-check directory
      file:
        path: /var/lib/zuul/defconf
        state: directory

    - name: Install config-check service default configuration
      template:
        src: "config-check/{{ item }}.j2"
        dest: "/var/lib/zuul/defconf/{{ item|replace('defconf-', '') }}"
      with_items:
        - defconf-nodepool.yaml
        - defconf-zuul.conf
        - defconf-repoxplorer.py

    - name: Dump current architecture for config-check test
      copy:
        dest: /var/lib/zuul/defconf/arch.yaml
        content: '{{ {"roles": roles}| to_yaml }}'

    - name: Ensure /var/lib/zuul/jenkins exists
      file:
        path: "{{ item }}"
        state: directory
        mode: 0700
        owner: zuul
      with_items:
        - /var/lib/zuul/jenkins
        - /var/lib/zuul/jenkins/secrets
      when: "'jenkins' in roles or zuul_jenkins_credencials"

    - name: Fetch Jenkins Secrets on the install-server
      command: "rsync -r {{ jenkins_host }}:/var/lib/jenkins/{{ item }} /var/lib/software-factory/jenkins/{{ item }}"
      delegate_to: localhost
      with_items:
        - credentials.xml
        - secrets/
      when: "'jenkins' in roles"

    - name: Copy Jenkins Secrets to zuul-launcher home directory
      command: "rsync -r /var/lib/software-factory/jenkins/ {{ zuul_launcher_host }}:/var/lib/zuul/jenkins/"
      delegate_to: localhost
      when: "'jenkins' in roles or zuul_jenkins_credencials"

    - name: Ensure jenkins secrets key exists
      file:
        path: "/var/lib/zuul/jenkins/{{ item }}"
        state: touch
        owner: zuul
        mode: 0400
      with_items:
        - credentials.xml
        - secrets/master.key
        - secrets/hudson.util.Secret
        - secrets/org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl
      when: "'jenkins' in roles or zuul_jenkins_credencials"

  when: "'zuul-launcher' in zuul_services"

- block:
    - name: Create /var/www/zuul
      file:
        path: /var/www/zuul
        state: directory

    - name: Symlink zuul image
      file:
        src: /usr/share/javascript/zuul/images/
        dest: /var/www/zuul/images
        state: link

    - name: Symlink zuul static assets
      file:
        src: /usr/share/javascript/zuul/
        dest: /var/www/static/zuul
        state: link

    - name: Install index.html for zuul
      copy:
        src: zuul.index.html
        dest: /var/www/zuul/index.html
        mode: 0444
  when: "'zuul-server' in zuul_services"

- block:
    - name: Ensure known_hosts file exists
      file:
        path: /var/lib/zuul/.ssh/known_hosts
        owner: zuul
        group: zuul
        mode: 0600
        state: touch

    - name: Check if the zuul sources are already defined
      command: "ssh-keygen -f /var/lib/zuul/.ssh/known_hosts -F {{ item.host_packed }}"
      with_items: "{{zuul_ssh_known_hosts}}"
      register: zuul_known_hosts_results
      ignore_errors: "yes"

    # This is a bit tricky since ssh-keyscan doesn't output the correct host format when port != 22
    - name: Scan the missing zuul sources
      shell: >
        ssh-keyscan -T 10 -p {{ item.item.port }} {{ item.item.host }} |
        grep '^{{ item.item.host }}' |
        awk '{ print "{{ item.item.host_packed }} " $2 " " $3 }' >>
        /var/lib/zuul/.ssh/known_hosts
      with_items: "{{ zuul_known_hosts_results.results }}"
      when: item.stdout == ""
  when: "'zuul-server' in zuul_services or 'zuul-merger' in zuul_services"

- name: "Copy logging configuration"
  template:
    src: "{{ item }}.j2"
    dest: "/etc/zuul/{{ item }}"
  with_items:
    - server-logging.conf
    - gearman-logging.conf
    - merger-logging.conf
    - launcher-logging.conf
  notify: restart zuul

- name: "Setup sysconfig"
  template:
    src: sysconfig.j2
    dest: /etc/sysconfig/zuul
  notify: restart zuul

- name: "Setup configuration"
  template:
    src: zuul.conf.j2
    dest: /etc/zuul/zuul.conf
    mode: 0440
    group: zuul
  notify: restart zuul

- name: "Copy gearman-check script"
  copy:
    src: gearman-check
    dest: /usr/local/bin/gearman-check
    mode: 0555
  when: "'zuul-server' in zuul_services"

- name: "Setup gearman-check cron"
  cron:
    name: gearman-check-cron
    job: /usr/local/bin/gearman-check
    minute: 0
    hour: 0
  when: "'zuul-server' in zuul_services"
