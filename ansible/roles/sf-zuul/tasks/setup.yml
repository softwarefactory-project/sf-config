---
- include_tasks: "{{ sf_tasks_dir }}/check_version.yml"
- name: Set zuul_need_restart fact
  set_fact:
    zuul_need_restart: "{{ _version is changed }}"

- include_tasks: "{{ sf_tasks_dir }}/create_user.yml"
  vars:
    user_name: zuul
    ssh_key: zuul_rsa
    home_dir: "{{ zuul_lib_dir }}"
    home_dir_mode: "0700"

- name: Install service env for rh-git218
  copy:
    content: |
      PATH=/opt/rh/rh-git218/root/usr/bin:/bin
      LD_LIBRARY_PATH=/opt/rh/rh-git218/root/usr/lib64:/opt/rh/httpd24/root/lib64/
      REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-bundle.crt
    dest: /etc/sysconfig/zuul

- name: Expose public keys
  copy:
    content: "{{ zuul_rsa_pub }}"
    dest: "/var/www/keys/zuul_rsa.pub"
    mode: "0444"
  delegate_to: "{{ gateway_host }}"

- name: Create /var/lib/log-classify directory
  file:
    path: /var/lib/log-classify
    state: directory
    owner: zuul
    mode: 0700
  when: "'log-classify' in roles"

- block:
    - name: Install zuul-changes.py script
      template:
        src: zuul-changes.py.j2
        dest: /usr/libexec/software-factory/zuul-changes.py
        mode: 0755
      delegate_to: "{{ item }}"
      loop: "{{ groups['install-server'] | union( groups['zuul-scheduler'] ) }}"

    - name: Install gearman-client script
      template:
        src: gearman-client.sh.j2
        dest: /usr/libexec/software-factory/gearman-client
        mode: 0755

    - name: Install zuul_worker_rsa key
      copy:
        src: /var/lib/software-factory/bootstrap-data/ssh_keys/zuul_worker_rsa
        dest: "{{ zuul_lib_dir }}/.ssh/zuul_worker_rsa"
        owner: zuul
        mode: 0400

    - name: Create tenant-secrets directory
      file:
        path: "{{ zuul_lib_dir }}/tenant-secrets"
        state: directory
        mode: 0700
  when: "'zuul-scheduler' in zuul_services"

- block:
    - name: Ensure known_hosts file exists
      file:
        path: "{{ zuul_lib_dir }}/.ssh/known_hosts"
        owner: zuul
        group: zuul
        mode: 0600
        state: touch
      changed_when: false

    - name: Check if the zuul sources are already defined
      command: "ssh-keygen -f {{ zuul_lib_dir }}/.ssh/known_hosts -F {{ item.host_packed }}"
      loop: "{{ zuul_ssh_known_hosts }}"
      register: _zuul_known_hosts_results
      failed_when: false
      changed_when: false

    - name: Scan the missing zuul sources
      shell: >
        ssh-keyscan -T 10 -p {{ item.item.port }} {{ item.item.host }} | sort | tac >>
        {{ zuul_lib_dir }}/.ssh/known_hosts
      loop: "{{ _zuul_known_hosts_results.results }}"
      when: item.stdout == ""

    - name: Check zuul user can connect to gerrit connections
      become_user: zuul
      command: >
        ssh -i {{ item.sshkey | default(zuul_lib_dir + "/.ssh/id_rsa") }}
            -o UserKnownHostsFile={{ zuul_lib_dir }}/.ssh/known_hosts
            -p {{ item.port|default(29418) }}
            {{ item.username }}@{{ item.hostname }} gerrit version
      register: _zuul_connection_test
      failed_when: _zuul_connection_test.stdout.find("gerrit version") == -1
      changed_when: false
      loop: "{{ zuul_gerrit_connections }}"

    - name: Install github private key
      copy:
        content: "{{ item.app_key }}"
        dest: "{{ zuul_lib_dir }}/.ssh/github_{{ item.name }}_rsa"
        mode: 0400
        owner: zuul
        group: zuul
      loop: "{{ zuul_github_connections }}"
      when: item.app_key
      no_log: show_hidden_logs == False

    - include_tasks: create_logging.yml
      vars:
        _logfile: "scheduler"
    - include_tasks: create_logging.yml
      vars:
        _logfile: "gearman-server"
  when: "'zuul-scheduler' in zuul_services or 'zuul-merger' in zuul_services or 'zuul-executor' in zuul_services"

- block:
    - include_tasks: create_logging.yml
      vars:
        _logfile: "executor"
  when: "'zuul-executor' in zuul_services"

- block:
    - include_tasks: create_logging.yml
      vars:
        _logfile: "merger"
  when: "'zuul-merger' in zuul_services"

- block:
    - include_tasks: create_logging.yml
      vars:
        _logfile: "web"
  when: "'zuul-web' in zuul_services"

- name: Install logrotate configuration
  copy:
    src: zuul.logrotate.conf
    dest: /etc/logrotate.d/zuul

- name: "Create ssl directory"
  file:
    path: "{{ zuul_conf_dir }}/ssl"
    mode: 0550
    group: zuul
    state: directory

- name: "Setup gearman certificates"
  copy:
    content: "{{ item.content }}"
    dest: "{{ zuul_conf_dir }}/ssl/{{ item.dest }}"
    mode: 0440
    group: zuul
  loop:
    - {content: "{{ localCA_pem }}", dest: "localCA.pem"}
    - {content: "{{ gearman_crt }}", dest: "gearman.crt"}
    - {content: "{{ gearman_key }}", dest: "gearman.key"}
  no_log: show_hidden_logs == False

- name: "Setup configuration"
  template:
    src: zuul.conf.j2
    dest: "{{ zuul_conf_dir }}/zuul.conf"
    mode: 0440
    group: zuul
    backup: yes
  notify: restart zuul

- block:
    - name: Create override directory
      file:
        path: /etc/systemd/system/zuul-scheduler.service.d
        state: directory

    - name: Set wait4service if gerrit service is present
      blockinfile:
        path: /etc/systemd/system/zuul-scheduler.service.d/override.conf
        create: yes
        block: |
          [Service]
          ExecStartPre=/usr/bin/wait4service {{ gerrit_host }} 29418
      register: zuul_override

    - name: Daemon reload
      command: systemctl daemon-reload
      when: zuul_override is changed
      notify: restart zuul
  when:
    - "'gerrit' in roles"
    -  "'zuul-scheduler' in zuul_services"

- block:
    - name: "Check if scheduler is running"
      command: systemctl is-active "zuul-scheduler"
      register: zuul_scheduler_service_running
      changed_when: False
      failed_when: zuul_scheduler_service_running.rc not in [0, 3]

    - name: "Manually create database to avoid concurrency issue"
      command: |
        /bin/python3.6 -c 'import zuul.cmd
        import configparser
        app = zuul.cmd.ZuulApp()
        app.config = configparser.ConfigParser()
        app.config.read("{{ zuul_conf_dir }}/zuul.conf")
        app.configure_connections()'
      when: zuul_scheduler_service_running.rc == 3
  when: "'zuul-scheduler' in zuul_services"

- name: Update gerrit email address when fqdn is updated
  block:
    - name: Delete all emails in gerrit
      command: ssh gerrit 'gerrit set-account --delete-email ALL zuul'
    - name: Update email address in gerrit
      command: ssh gerrit 'gerrit set-account --add-email zuul@{{ fqdn }} zuul'
  when:
    - update_fqdn
  delegate_to: "{{ install_server_host }}"
