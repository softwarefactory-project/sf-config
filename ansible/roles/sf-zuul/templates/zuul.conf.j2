{% if 'influxdb' in roles %}
[statsd]
server={{ statsd_host | default(influxdb_host | default ('')) }}
port={{ statsd_port | default(8125) }}
{% endif %}

[zookeeper]
hosts={{ zookeeper_host }}:2281
tls_cert={{ zuul_conf_dir }}/ssl/zookeeper.crt
tls_key={{ zuul_conf_dir }}/ssl/zookeeper.key
tls_ca={{ zuul_conf_dir }}/ssl/zk-ca.pem

[keystore]
password={{ zuul_keystore_secret }}

{% if 'zuul-scheduler' in roles %}
[scheduler]
state_dir={{ zuul_lib_dir }}
command_socket={{ zuul_lib_dir }}/scheduler.socket
tenant_config={{ zuul_conf_dir }}/main.yaml
log_config={{ zuul_conf_dir }}/scheduler-logging.yaml
max_hold_expiration={{ zuul_max_hold_expiration|default(0) }}
default_hold_expiration={{ zuul_default_hold_expiration|default(86400) }}
{% endif %}

{% if 'zuul-merger' in roles %}
[merger]
state_dir={{ zuul_lib_dir }}
command_socket={{ zuul_lib_dir }}/merger.socket
git_dir={{ zuul_lib_dir }}/git/
git_user_email=zuul@{{ fqdn }}
git_user_name=zuul
log_config={{ zuul_conf_dir }}/merger-logging.yaml
{% endif %}

{% if 'zuul-executor' in roles %}
[executor]
ansible_setup_timeout={{ zuul_executor_ansible_setup_timeout|default(60) }}
manage_ansible=false
ansible_root=/usr/lib/zuul/ansible/
state_dir={{ zuul_lib_dir }}
command_socket={{ zuul_lib_dir }}/executor.socket
git_dir={{ zuul_lib_dir }}/executor/
disk_limit_per_job={{ zuul_executor_disk_limit|default(250) }}
private_key_file={{ zuul_lib_dir }}/.ssh/id_rsa
finger_port={{ zuul_executor_finger_port }}
{% if 'log-classify' in roles %}
trusted_rw_paths=/var/lib/log-classify
{% endif %}
trusted_ro_paths=/opt/:/etc/pki
untrusted_ro_paths=/opt/:/etc/pki
log_config={{ zuul_conf_dir }}/executor-logging.yaml
log_stream_file=/var/tmp/zuul-console/console-{log_uuid}.log
load_multiplier={{ zuul_executor_load_multiplier|default(2.5) }}
min_avail_hdd={{ zuul_executor_min_avail_hdd|default(5.0) }}
min_avail_mem={{ zuul_executor_min_avail_mem|default(5.0) }}
sigterm_method=stop
{# An executor zone can be configured by adding in /etc/software-factory/custom-vars.yaml
zuul_executor_zone:
  - hostname: ze01
    zone: private
#}
{% for executor in zuul_executor_zone|default([]) %}
{% if ansible_hostname == executor.hostname  %}
zone={{ executor.zone }}
{% endif %}
{% endfor %}
{% endif %}

{% if 'zuul-fingergw' in roles %}
[fingergw]
state_dir={{ zuul_lib_dir }}
command_socket={{ zuul_lib_dir }}/fingergw.socket
listen_address=0.0.0.0
port={{ zuul_fingergw_port }}
log_config={{ zuul_conf_dir }}/fingergw-logging.yaml
{# An fingergw zone can be configured by adding in /etc/software-factory/custom-vars.yaml
zuul_fingergw_zone:
  - hostname: zfgw01
    zone: private
    gateway_hostname: 192.168.10.254

#}
{% for fingergw in zuul_fingergw_zone|default([]) %}
{% if ansible_hostname == fingergw.hostname  %}
zone={{ fingergw.zone }}
hostname={{ fingergw.gateway_hostname }}
{% endif %}
{% endfor %}
{% endif %}

{% if 'zuul-web' in roles %}
[web]
listen_address=0.0.0.0
command_socket={{ zuul_lib_dir }}/web.socket
port={{ zuul_web_port }}
log_config={{ zuul_conf_dir }}/web-logging.yaml
root={{ zuul_pub_url }}
{% endif %}

[webclient]
url={{ zuul_pub_url }}

[auth zuul_operator]
driver=HS256
allow_authz_override=true
realm={{ fqdn }}
client_id=zuul.{{ fqdn }}
issuer_id=admin@{{ fqdn }}
secret={{ zuul_hs256_secret }}
token_expiry=3600

{% for auth in zuul_external_authenticators|default([]) %}
[auth {{ auth['name'] }}]
driver=OpenIDConnect
realm={{ auth['realm'] }}
issuer_id={{ auth['issuer_id'] }}
client_id={{ auth['client_id'] }}

{% endfor %}
[database]
dburi=mysql+pymysql://{{ zuul_mysql_user }}:{{ zuul_mysql_password}}@{{ zuul_mysql_host }}/{{ zuul_mysql_db }}

# TODO use fqdn postfix, not localhost
[connection smtp]
driver=smtp
server=localhost
port=25
default_from=zuul@{{ fqdn }}
default_to=admin@{{ fqdn }}

{% for conn in zuul_gerrit_connections|default([]) %}
[connection {{ conn['name'] }}]
driver=gerrit
port={{ conn['port']|default('29418') }}
server={{ conn['hostname'] }}
baseurl={{ conn['puburl'] }}
gitweb_url_template={baseurl}/plugins/gitiles/{project.name}/+/{sha}^!/
user={{ conn['username'] }}
sshkey={{ zuul_lib_dir }}/.ssh/id_rsa
{% if 'password' in conn %}
password={{ conn['password'] }}
{% if 'auth_type' in conn %}
auth_type={{ conn['auth_type'] }}
{% endif %}
{% if 'verify_ssl' in conn %}
verify_ssl={{ conn['verify_ssl'] }}
{% endif %}
{% endif %}
{% if conn['canonical_hostname']|default(False) %}
canonical_hostname={{ conn['canonical_hostname'] }}
{% endif %}
{% if conn['report_only']|default(False) %}
report_only=True
stream_events=False
{% endif %}

{% endfor %}

{% for conn in zuul_github_connections|default([]) %}
[connection {{ conn['name'] }}]
driver=github
{% if conn.get('app_key') %}
# Github App
app_id={{ conn.get('app_id') }}
app_key={{ zuul_lib_dir }}/.ssh/github_{{ conn['name'] }}_rsa
{% elif conn.get('api_token') %}
# Github Webhook
sshkey={{ zuul_lib_dir }}/.ssh/id_rsa
api_token={{ conn['api_token'] }}
{% endif %}
{% if conn.get('webhook_token') %}
webhook_token={{ conn['webhook_token'] }}
{% endif %}
server={{ conn['hostname']|default('github.com') }}
verify_ssl={{ conn['verify_ssl']|default(True) }}
git_host={{ conn['hostname']|default('github.com') }}
port={{ conn['port']|default('22') }}
{% if conn['canonical_hostname']|default(False) %}
canonical_hostname={{ conn['canonical_hostname'] }}
{% endif %}

{% endfor %}

{% for conn in zuul_pagure_connections|default([]) %}
[connection {{ conn['name'] }}]
driver=pagure
server={{ conn['hostname']|default('pagure.io') }}
api_token={{ conn.get('api_token') }}
{% if conn['baseurl']|default(false) %}
baseurl={{ conn['baseurl'] }}
{% endif %}
{% if conn['cloneurl']|default(false) %}
baseurl={{ conn['cloneurl'] }}
{% endif %}
{% if conn['source_whitelist']|default(false) %}
source_whitelist={{ conn['source_whitelist'] }}
{% endif %}

{% endfor %}

{% for conn in zuul_gitlab_connections|default([]) %}
[connection {{ conn['name'] }}]
driver=gitlab
server={{ conn['hostname']|default('gitlab.com') }}
api_token={{ conn.get('api_token') }}
webhook_token={{ conn.get('webhook_token') }}
{% if conn['baseurl']|default(false) %}
baseurl={{ conn['baseurl'] }}
{% endif %}
{% if conn['cloneurl']|default(false) %}
cloneurl={{ conn['cloneurl'] }}
{% endif %}

{% endfor %}

{% for conn in zuul_git_connections|default([]) %}
[connection {{ conn['name'] }}]
driver=git
baseurl={{ conn['baseurl'] }}
poll_delay={{ conn['poll_delay']|default('7200') }}

{% endfor %}

{% for conn in opensearch_connections|default([]) %}
[connection {{ conn['name'] }}]
driver=elasticsearch
uri={{conn['username']|default('zuul') }}:{{ conn['password']|default('zuul') }}@{{ conn['host']|default('localhost') }}:{{ conn['port']|default(9200) }}
use_ssl={{ conn['use_ssl']|default('true') }}
ca_certs={{ conn['ca_certs']|default('/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem') }}
{% if 'index' in conn and conn['index'] %}
index={{ conn['index'] }}
{% endif %}
{% endfor %}

{% if 'firehose' in roles %}

[connection mqtt]
driver=mqtt
server={{ firehose_host }}
user=SF_SERVICE_USER
password={{ sf_service_user_password }}
{% endif %}


[auth keycloak]
default=true
driver=OpenIDConnect
realm={{ keycloak_default_realm }}
issuer_id=https://{{ fqdn }}/auth/realms/{{ keycloak_default_realm }}
client_id={{ keycloak_client_name }}
