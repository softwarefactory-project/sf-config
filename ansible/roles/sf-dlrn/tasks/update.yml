---
- file:
    path: /var/lib/software-factory/state/dlrn_config
    state: touch

- name: Check local config
  command: cat /var/lib/software-factory/state/dlrn_config
  register: localconfig

- name: Check upstream config
  command: git log -n 3 --oneline dlrn/
  args:
    chdir: /root/config
  register: upstreamconfig

- block:
    - stat:
        path: /root/config/dlrn/projects.yaml
      register: dlrn_config

    - include_vars: /root/config/dlrn/projects.yaml
      when: dlrn_config.stat.exists

    # Set a fake repo for the initialization
    - name: "Create dlrn data directory default tree"
      file:
        path: "{{ dlrn_base_dir }}/{{ item.project }}/data/repos/bootstrap"
        mode: 0755
        owner: dlrn
        state: directory
      with_items: "{{ projects }}"
      when: projects is defined

    # delorean.repo is expected to exists by DLRN workers
    - name: "Create empty default delorean.repo"
      file:
        path: "{{ dlrn_base_dir }}/{{ item.project }}/data/repos/bootstrap/delorean.repo"
        mode: 0755
        owner: dlrn
        state: touch
      with_items: "{{ projects }}"
      when: projects is defined

    # Set the link only when not already exists
    - name: "Create dlrn data projects directories"
      shell: "test -L current || ln -s bootstrap current && chown -h dlrn current"
      args:
        chdir: "{{ dlrn_base_dir }}/{{ item.project }}/data/repos/"
      with_items: "{{ projects }}"
      when: projects is defined

    - name: "Setup dlrn projects configuration file"
      template:
        src: projects.ini.j2
        dest: "/etc/dlrn/{{ item.project }}.ini"
      with_items: "{{ projects }}"
      when: projects is defined

    - name: "Setup dlrn api projects configuration file"
      template:
        src: dlrn-api.cfg.j2
        dest: "/etc/dlrn/{{ item.project }}-api.cfg"
      with_items: "{{ projects }}"
      when: projects is defined

    - name: "Setup dlrn projects httpd configuration file"
      template:
        src: dlrn.conf.j2
        dest: "/etc/httpd/conf.d/dlrn-{{ item.project }}.conf"
      notify: apache reload
      with_items: "{{ projects }}"
      when: projects is defined

    - name: "Install dlrn wsgi app"
      template:
        src: dlrn-api.wsgi.j2
        dest: "/var/www/dlrn/dlrn-api-{{ item.project }}.wsgi"
      with_items: "{{ projects }}"
      notify: apache reload
      when: projects is defined

    - name: "Configure http gateway dlrn proxy"
      template:
        src: gateway-dlrn.conf.j2
        dest: /etc/httpd/conf.d/gateway-dlrn.conf
      notify: apache reload
      delegate_to: "{{ install_server }}"
      when: projects is defined

  when: localconfig.stdout != upstreamconfig.stdout

- name: Write config repo sha1 matching current configuration
  copy:
    content: "{{ upstreamconfig.stdout }}"
    dest: /var/lib/software-factory/state/dlrn_config
  when: localconfig.stdout != upstreamconfig.stdout
