---
- name: Check container image version
  include_role:
    name: sf-container
    tasks_from: check_version.yaml
  loop: "{{ logstash_components + curator_components }}"

- name: Create cert dir
  file:
    path: "{{ item }}"
    owner: "{{ owner }}"
    group: "{{ group }}"
    recurse: true
    state: directory
  loop:
    - "{{ logstash_stack_certs }}"
    - "{{ logstash_index_dir }}"
    - "{{ logstash_log_dir }}"
    - "{{ curator_config_dir }}"

- name: Copy CA cert to logstash dir
  copy:
    src: "/etc/pki/ca-trust/source/anchors/localCA.pem"
    dest: "{{ logstash_stack_certs }}/localCA.pem"
    mode: '0640'
    owner: "{{ owner }}"
    group: "{{ group }}"
  when: not external_elasticsearch_cacert

- name: Configure external Elasticsearch
  block:
    - name: Check if Elasticsearch CA cert file exist
      stat:
        path: "{{ external_elasticsearch_cacert }}"
      register: _external_localca

    - name: Set global permission for cert
      file:
        path: "{{ external_elasticsearch_cacert }}"
        mode: '0644'
      when: _external_localca.stat.exists
  when: external_elasticsearch_cacert != "None"

- name: Install configuration files - logstash
  template:
    src: "{{ item }}.j2"
    dest: "{{ logstash_index_dir }}/{{ item }}"
    mode: "0644"
    owner: "{{ owner }}"
    group: "{{ group }}"
  register: logstash_templates
  loop:
    - indexer.conf

- name: Install configuration files - curator
  template:
    src: "{{ item }}.j2"
    dest: "{{ curator_config_dir }}/{{ item }}"
    mode: "0644"
    owner: "{{ owner}}"
    group: "{{ group }}"
  register: logstash_templates
  loop:
    - curator.yml
    - delete_old_indices.yml

- name: Change logstash jvm options file
  copy:
    content: |
      # FROM jvm.options - default config file
      -Xms{{ logstash_minimum_heap_size }}
      -Xmx{{ logstash_maximum_heap_size }}
      -XX:+UseConcMarkSweepGC
      -XX:CMSInitiatingOccupancyFraction=75
      -XX:+UseCMSInitiatingOccupancyOnly
      -Djava.awt.headless=true
      -Dfile.encoding=UTF-8
      -Djruby.compile.invokedynamic=true
      -Djruby.jit.threshold=0
      -Djruby.regexp.interruptible=true
      -XX:+HeapDumpOnOutOfMemoryError
      -Djava.security.egd=file:/dev/urandom
      -Dlog4j2.isThreadContextMapInheritable=true
    dest: "{{ logstash_config_dir }}/jvm.options"
  notify:
    - restart logstash
    - ensure started logstash
    - wait for logstash service

# so the opensearch container can not start when logstash is running.
# https://opensearch.org/docs/opensearch/install/important-settings/
- name: Create logastash configuration file
  copy:
    content: |
      http.port: {{ logstash_http_port }}
      http.host: {{ logstash_host }}
      log.level: info
      path.logs: /var/log/logstash
    dest: "{{ logstash_config_dir }}/logstash.yml"
  notify:
    - restart logstash
    - ensure started logstash
    - wait for logstash service

- name: Create container - Logstash
  include_role:
    name: sf-container
    tasks_from: setup.yaml
  loop: "{{ logstash_components }}"

- name: Create delete indices script
  copy:
    content: |
      #!/bin/bash
      INDICES_FILE=$1
      podman run {{ item.params }} $INDICES_FILE
    dest: /usr/local/bin/curator.sh
    mode: '0755'
  loop: "{{ curator_components }}"

- name: Add crontab entry for pruning old indices
  cron:
    name: "Delete old logstash indexes"
    minute: "0"
    hour: "0"
    day: "*"
    job: /usr/local/bin/curator.sh /etc/curator/delete_old_indices.yml
