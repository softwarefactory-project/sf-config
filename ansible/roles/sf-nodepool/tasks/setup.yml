---
- include: "{{ sf_tasks_dir }}/create_user.yml user_name=nodepool ssh_key=nodepool_rsa"

- name: Install jenkins/zuul public ssh key
  copy:
    content: "{{ hostvars[inventory_hostname][item+'_pub'] }}"
    dest: "/var/lib/nodepool/.ssh/{{ item }}.pub"
    mode: 0444
    owner: nodepool
    group: nodepool
  with_items:
    - jenkins_rsa
    - zuul_rsa

- name: Install config
  template:
    src: "{{ item }}.j2"
    dest: "/etc/nodepool/{{ item }}"
    owner: "root"
    group: "nodepool"
    mode: "0440"
  with_items:
    - _nodepool.yaml
    - secure.conf

- name: Install os-client-config
  template:
    src: clouds.yaml.j2
    dest: /var/lib/nodepool/.config/openstack/clouds.yaml
    owner: nodepool
    group: nodepool
    mode: 0400

- name: Ensure /root/.config/openstack exists
  file:
    path: /root/.config/openstack
    state: directory

- name: Install os-client-config for root user
  template:
    src: clouds.yaml.j2
    dest: /root/.config/openstack/clouds.yaml
    mode: 0400

- name: Create image build log directory
  file:
    path: /var/www/nodepool-log
    state: directory
    owner: nodepool
    group: apache
    mode: 0750

- name: Install httpd conf.d nodepool log
  copy:
    src: nodepool_log.conf
    dest: /etc/httpd/conf.d/nodepool_log.conf
  register: nodepool_log_http_conf

- name: Ensure httpd is running on nodepool-builder host
  when: nodepool_log_http_conf|changed and 'nodepool-builder' in nodepool_services
  service:
    name: httpd
    state: reloaded
    enabled: "yes"

- name: Ensure /usr/local/share/sf-jenkins-slave-tools/ exists
  file:
    path: /usr/local/share/sf-jenkins-slave-tools/
    state: directory

- name: Setup sysconfig
  template:
    src: sysconfig.j2
    dest: /etc/sysconfig/nodepool
  notify: nodepool restart

- name: Setup authorized keys
  copy:
    content: "{{ jenkins_rsa_pub }}"
    dest: /etc/nodepool/scripts/authorized_keys

- name: Setup localCA
  copy:
    content: "{{ localCA_pem }}"
    dest: /etc/nodepool/scripts/localCA.pem

- name: Start service
  service:
    name: "{{ item }}"
    enabled: "yes"
  with_items: "{{ nodepool_services }}"
