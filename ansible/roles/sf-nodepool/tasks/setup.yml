---
- include_tasks: "{{ sf_tasks_dir }}/create_user.yml user_name=nodepool ssh_key=nodepool_rsa home_dir={{ nodepool_lib_dir }}"

- name: Install nodepool shortcut
  copy:
    src: nodepool.sh
    dest: /usr/bin/nodepool
    mode: 0755

- name: Symlink SCL to nodepool
  file:
    src: "{{ item.src }}/nodepool"
    dest: "{{ item.dest }}/nodepool"
    state: link
  with_items:
    - {src: /var/opt/rh/rh-python35/lib, dest: /var/lib}
    - {src: /var/opt/rh/rh-python35/log, dest: /var/log}
    - {src: /etc/opt/rh/rh-python35, dest: /etc}

- name: Create .ssh and .config directories
  file:
    dest: "{{ item }}"
    state: directory
    mode: 0700
    owner: nodepool
    group: nodepool
  with_items:
    - /var/lib/nodepool/.ssh
    - /var/lib/nodepool/.config/openstack
    - /root/.config/openstack

- name: Copy the key
  copy:
    content: "{{ hostvars[inventory_hostname][item.key] }}"
    dest: "/var/lib/nodepool/.ssh/{{ item.name }}"
    mode: "{{ item.mode }}"
    owner: "nodepool"
    group: "nodepool"
  with_items:
    - {key: "nodepool_rsa", name: "id_rsa", mode: "0400"}
    - {key: "nodepool_rsa_pub", name: "id_rsa.pub", mode: "0444"}
  no_log: true

- name: Install .kube/config
  command: >
    oc login {{ item.url }}
             -u {{ item.username }}
             -p {{ item.password }}
             --insecure-skip-tls-verify={{ item.insecure_skip_tls_verify }}
  become: yes
  become_user: nodepool
  with_items: "{{ nodepool_openshift_providers }}"

- name: Install os-client-config
  template:
    src: clouds.yaml.j2
    dest: "{{ item }}/openstack/clouds.yaml"
    owner: nodepool
    group: nodepool
    mode: 0400
  with_items:
    - /root/.config
    - /var/lib/nodepool/.config
  when: not nodepool_clouds_file

- name: Copy os-client-config
  copy:
    src: "{{ nodepool_clouds_file }}"
    dest: "{{ item }}/openstack/clouds.yaml"
    owner: nodepool
    group: nodepool
    mode: 0400
  with_items:
    - /root/.config
    - /var/lib/nodepool/.config
  when: nodepool_clouds_file

- name: add nodepool to sudoers
  copy:
    src: /etc/opt/rh/rh-python35/sudoers.d/nodepool
    dest: /etc/sudoers.d/nodepool
    owner: root
    group: root
    mode: 0640
    remote_src: yes
  when:
    - '"nodepool-builder" in nodepool_services'

- name: Install zuul public ssh key
  copy:
    content: "{{ hostvars[inventory_hostname][item+'_pub'] }}"
    dest: "{{ nodepool_lib_dir }}/.ssh/{{ item }}.pub"
    mode: 0444
    owner: nodepool
    group: nodepool
  with_items:
    - zuul_rsa

- name: Install config
  template:
    src: "{{ item }}.j2"
    dest: "{{ nodepool_conf_dir }}/{{ item }}"
    owner: "root"
    group: "nodepool"
    mode: "0440"
  with_items:
    - _nodepool.yaml
    - secure.conf

- name: Create nodepool working directories
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default(0750) }}"
    state: directory
  with_items:
    - {path: "/var/www/nodepool-log", owner: "nodepool", group: "apache"}
    - {path: "/var/lib/nodepool/images", owner: "nodepool", group: "nodepool"}
    - {path: "/var/www/html", mode: "0755"}

- name: Install httpd conf.d nodepool log
  copy:
    src: nodepool_log.conf
    dest: /etc/httpd/conf.d/nodepool_log.conf
  register: nodepool_log_http_conf

- name: Reload http on the nodepool-builder node
  service:
    name: httpd
    state: reloaded
    enabled: "yes"
  when:
    - 'nodepool_log_http_conf is changed'
    - '"nodepool-builder" in nodepool_services'

- name: Ensure /var/www/html/nodepool-log link to /var/www/nodepool-log
  file:
    path: /var/www/html/nodepool-log
    src: /var/www/nodepool-log
    state: link

- name: Setup authorized keys
  copy:
    content: "{{ zuul_rsa_pub }}"
    dest: "{{ nodepool_conf_dir }}/scripts/authorized_keys"

- name: Setup localCA
  copy:
    content: "{{ localCA_pem }}"
    dest: "{{ nodepool_conf_dir }}/scripts/localCA.pem"
