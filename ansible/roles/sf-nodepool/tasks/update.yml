---
- file:
    path: /var/lib/software-factory/state/nodepool_config
    state: touch

- name: Check last applied Nodepool config checksum
  command: cat /var/lib/software-factory/state/nodepool_config
  register: localconfig

- name: Check new Nodepool config checksum
  shell: git log -n 3 --oneline nodepool/nodepool.yaml && md5sum /etc/nodepool/_nodepool.yaml
  args:
    chdir: /root/config
  register: upstreamconfig

- name: Update nodepool configuration
  command: "{{ item }}"
  args:
    chdir: /root/config
  with_items:
    - /usr/share/sf-config/scripts/sf-nodepool-conf-merger.py nodepool/nodepool.yaml /etc/nodepool/nodepool.yaml
    - rsync -avi --delete --exclude authorized_keys --exclude localCA.pem nodepool/scripts/ /etc/nodepool/scripts/
    - rsync -avi /usr/local/share/sf-jenkins-slave-tools/ /etc/nodepool/scripts/
    - rsync -avi --delete nodepool/elements/ /etc/nodepool/elements/

- name: Fetch nodepool.yaml configuration
  fetch:
    flat: "yes"
    src: /etc/nodepool/nodepool.yaml
    dest: /var/lib/software-factory/state/nodepool.yaml

- name: Load nodepool configuration
  include_vars:
    file: /var/lib/software-factory/state/nodepool.yaml
    name: nodepool_config

- name: Update logging.conf
  template:
    src: "{{ item }}.j2"
    dest: "/etc/nodepool/{{ item }}"
  with_items: [logging.conf, builder-logging.conf]
  notify: restart nodepool

- name: Ensure service are started and enabled
  service:
    name: "{{ item }}"
    state: started
    enabled: "yes"
  with_items: "{{ nodepool_services }}"

- name: Write config repo checksum matching current configuration
  copy:
    content: "{{ upstreamconfig.stdout }}"
    dest: /var/lib/software-factory/state/nodepool_config
  when: localconfig.stdout != upstreamconfig.stdout
