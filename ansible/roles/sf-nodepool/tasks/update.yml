---
- name: Ensure /var/lib/software-factory/state/nodepool_config exists
  file:
    path: /var/lib/software-factory/state/nodepool_config
    state: touch
  changed_when: False

- name: Check last applied Nodepool config checksum
  command: cat /var/lib/software-factory/state/nodepool_config
  changed_when: False
  register: localconfig

- name: Check new Nodepool config checksum
  shell: git log -n 3 --oneline nodepool/ && md5sum "{{ nodepool_conf_dir }}/_nodepool.yaml"
  args:
    chdir: /root/config
  changed_when: False
  register: upstreamconfig

- name: Update nodepool configuration
  command: "{{ item }}"
  args:
    chdir: /root/config
  with_items:
    - /usr/share/sf-config/scripts/sf-nodepool-conf-merger.py nodepool/ "{{ nodepool_conf_dir }}/nodepool.yaml"
    - rsync -avi --delete nodepool/elements/ "{{ nodepool_conf_dir }}/elements/"

- name: Ensure service are started and enabled
  service:
    name: "rh-python35-{{ item }}"
    state: started
    enabled: "yes"
  with_items: "{{ nodepool_services }}"

- name: Restart service when fqdn is updated to refresh statsd client
  service:
    name: "rh-python35-{{ item }}"
    state: restarted
  with_items: "{{ nodepool_services }}"
  when: update_fqdn

- name: Write config repo checksum matching current configuration
  copy:
    content: "{{ upstreamconfig.stdout }}"
    dest: /var/lib/software-factory/state/nodepool_config
  when: localconfig.stdout != upstreamconfig.stdout
