#!/bin/env python

import os
import sys
import yaml
import copy
import shutil
import requests

REPOXPLORER_DEFAULT_FILE = "/etc/repoxplorer/default.yaml"


if __name__ == "__main__":
    default = {
        'project-templates': {
            'default': {
                'branches': ['master'],
                'uri': 'https://{{ fqdn }}/r/%(name)s',
                'gitweb': 'https://{{ fqdn }}/r/gitweb?p=%(name)s.git'
                          ';a=commitdiff;h=%%(sha)s;ds=sidebyside'}},
        'projects': {},
        'identities': {},
        'groups': {},
    }
    resources = requests.get("http://managesf:20001/v2/resources/").json()
    resources = resources['resources']
    for project, data in resources['projects'].items():
        default['projects'][project] = {}
        # Set a template by project to ease overwriting via the config repo
        default['project-templates'][project] = copy.deepcopy(
            default['project-templates']['default'])
        for repo in data['source-repositories']:
            default['projects'][project][repo] = {'template': project}
    for group, data in resources['groups'].items():
        grp = {}
        grp['description'] = data.get('description', '')
        grp['emails'] = dict((member, None) for member in data['members'])
        default['groups'][group] = grp

    if len(sys.argv) > 1 and sys.argv[1] == 'apply':
        if os.path.exists(REPOXPLORER_DEFAULT_FILE):
            shutil.copy(REPOXPLORER_DEFAULT_FILE,
                        REPOXPLORER_DEFAULT_FILE + 'save')
        yaml.safe_dump(default,
                       file(REPOXPLORER_DEFAULT_FILE, 'w'),
                       default_flow_style=False)
    else:
        print default
        print
        print "Run with 'apply' as first argument to apply"
