---
- name: Create user
  include_tasks: "{{ sf_tasks_dir }}/create_user.yml"
  vars:
    user_name: "{{ owner }}"
    shell: /bin/sh

- name: "Get {{ owner }} uid"
  command: "id -u {{ owner }}"
  register: _logserver_id

- name: "Get {{ owner }} gid"
  command: "id -g {{ owner }}"
  register: _logserver_gid

- name: "Setting {{ owner }} uid var"
  set_fact:
    logserver_uid: "{{ _logserver_id.stdout }}"
    logserver_gid: "{{ _logserver_gid.stdout }}"

- name: Create container directory
  include_role:
    name: sf-container
    tasks_from: create_directory.yaml
  loop:
    - path: "{{ logserver_config_dir }}"
      mode: "0750"
      recurse: "yes"

- name: Create logs directory
  file:
    path: /var/www/logs
    state: directory
    owner: "{{ owner }}"
    group: apache
    mode: '0755'

- name: Authorize logserver sshkey
  authorized_key:
    user: "{{ owner }}"
    key: "{{ item }}"
  loop: "{{ logserver_authorized_keys }}"

- name: Install httpd conf.d logserver configurations
  template:
    src: "{{ logserver_httpd_cont_conf_file }}.j2"
    dest: "{{ logserver_config_dir }}/{{ logserver_httpd_cont_conf_file }}"
  notify: apache reload

- name: Ensure old purgelogs cron absent
  cron:
    name: purge-logs
    state: absent

- name: Create container
  include_role:
    name: sf-container
    tasks_from: setup.yaml
  loop: "{{ logserver_components }}"

- name: Start service
  systemd:
    name: "{{ role_package }}"
    state: started
    daemon_reload: "yes"
    enabled: "yes"

- name: Start service
  systemd:
    name: "purgelogs"
    state: started
    daemon_reload: "yes"
    enabled: "yes"
