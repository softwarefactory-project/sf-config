---
- name: Create ara user
  include_tasks: "{{ sf_tasks_dir }}/create_user.yml"
  vars:
    user_name: ara

- name: Create user
  include_tasks: "{{ sf_tasks_dir }}/create_user.yml"
  vars:
    user_name: loguser
    shell: /bin/sh

- name: Create logs directory
  file:
    path: /var/www/logs
    state: directory
    owner: loguser
    group: apache
    mode: 0755

- name: Create ara gunicorn service
  copy:
    content: |
      [Unit]
      Description=ARA Rendering Service
      After=syslog.target network.target mariadb.service

      [Service]
      Type=simple
      User=ara
      Group=ara
      SyslogIdentifier=ara
      ExecStart=/bin/gunicorn_pecan-3 --workers 1 -t 1800 --access-logfile - --access-logformat '%(h)s %(l)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"' --chdir / -b 0.0.0.0:20003 -e 'ARA_WSGI_USE_VIRTUALENV=false' -e 'ARA_WSGI_VIRTUALENV_PATH=None' -e 'ARA_WSGI_TMPDIR_MAX_AGE={{ logs_wsgi_ara_tmpdir_max_age }}' -e 'ARA_WSGI_LOG_ROOT=/var/www/logs' -e 'ARA_WSGI_DATABASE_DIRECTORY=ara-report' --name ara ara.wsgi_sqlite

      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/ara.service
  register: _ara_service

- name: Start ara service
  systemd:
    name: "ara"
    daemon-reload: "{% if _ara_service is changed %}yes{% else %}no{% endif %}"
    state: started
    enabled: yes

- name: Authorize loguser sshkey
  authorized_key:
    user: loguser
    key: "{{ item }}"
  loop: "{{ loguser_authorized_keys }}"

- name: Install httpd conf.d logserver
  template:
    src: logserver.conf.j2
    dest: /etc/httpd/conf.d/logserver.conf
  register: httpd_conf

- name: Fix ara log root environment not being taken into account
  block:
    - file:
        path: /srv/static/logs
        state: directory

    - file:
        src: /var/www/logs
        dest: /srv/static/logs/logs
        state: link

- name: Install purge-logs script
  template:
    src: purge-logs.sh.j2
    dest: /usr/local/bin/purge-logs.sh
    mode: 0755

- name: Install purge-logs expiry
  cron:
    name: purge-logs
    job: /usr/local/bin/purge-logs.sh
    hour: 5
    minute: 0

- name: Ensure /var/www/static exist
  file:
    path: /var/www/static
    state: directory

- name: Configure vuejs location for os-loganalyze
  ini_file:
    dest: /etc/os_loganalyze/wsgi.conf
    section: general
    option: vuejs_src
    value: /static/js/vue.min.js

- name: Reload httpd
  service:
    name: httpd
    state: reloaded
    enabled: "yes"
  when: httpd_conf is changed

- name: Start services
  service:
    name: "{{ item }}"
    state: started
    enabled: "yes"
  loop:
    - sshd
    - httpd
