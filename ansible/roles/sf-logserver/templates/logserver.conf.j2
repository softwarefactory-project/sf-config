WSGIDaemonProcess logs user=apache group=apache processes={{ logs_wsgi_processes }} threads={{ logs_wsgi_threads }}
WSGIProcessGroup logs
WSGIApplicationGroup %{GLOBAL}

AddType text/plain .log
AddType text/plain .sh
AddType text/plain .yaml
AddType text/plain .yml

<Directory "/var/www/logs/">
    Options Indexes SymLinksIfOwnerMatch
    Require all granted
    IndexOptions FancyIndexing HTMLTable NameWidth=* SuppressDescription
    HeaderName /static/index-header.html
</Directory>

<FilesMatch \.html\.gz$>
    ForceType text/html
    AddDefaultCharset UTF-8
    AddEncoding x-gzip gz
</FilesMatch>
<FilesMatch \.css\.gz$>
    ForceType text/css
    AddDefaultCharset UTF-8
    AddEncoding x-gzip gz
</FilesMatch>
<FilesMatch \.js\.gz$>
    ForceType text/javascript
    AddDefaultCharset UTF-8
    AddEncoding x-gzip gz
</FilesMatch>
<FilesMatch \.ttf\.gz$>
    ForceType application/x-font-ttf
    AddEncoding x-gzip gz
</FilesMatch>
<FilesMatch \.svg\.gz$>
    ForceType image/svg+xml
    AddEncoding x-gzip gz
</FilesMatch>
<FilesMatch \.json\.gz$>
    ForceType application/json
    AddEncoding x-gzip gz
</FilesMatch>
<FilesMatch \.css$>
    # mod_mime_magic is sometimes passing css files as asm sources
    # e.g css files generated by coverage reports
    ForceType text/css
</FilesMatch>

<Directory "/opt/rh/rh-python35/root/usr/bin/">
    <Files "ara-wsgi-sqlite">
        Allow from all
        Satisfy Any
    </Files>
</Directory>

<LocationMatch "/logs/">
    RewriteEngine On

    # Redirect .*/{{ logs_wsgi_ara_directory }} to the ARA sqlite wsgi middleware
    # This middleware automatically loads the ARA web application with the
    # database located at .*/{{ logs_wsgi_ara_directory }}/ansible.sqlite.
    # However, the rule does not match the databases themselves, allowing users
    # to download them if need be by appending /ansible.sqlite to their
    # {{ logs_wsgi_ara_directory }} URL.

    # Everything beyond this point is rewritten to htmlify.
    # Make sure we don't do that for dynamic ARA reports.
    RewriteCond %{REQUEST_URI} ^.*/{{ logs_wsgi_ara_directory }} [NC]
    RewriteRule .* - [L]

    # Redirect plain text file to htmlify middleware
    RewriteRule ^/var/www/logs/(.*console\.html)$ /htmlify/$1 [QSA,L,PT]
    RewriteRule ^/var/www/logs/(.*\.txt\.gz)$ /htmlify/$1 [QSA,L,PT]

    # Implicit redirect from ara directories to the index file
    RewriteRule ^/var/www/logs/(.*)/ara/$ /logs/$1/ara/index.html.gz [QSA,L,PT]
    RewriteRule ^/var/www/logs/(.*)/ara/(file|result)/([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})/$ /logs/$1/ara/$2/$3/index.html.gz [QSA,L,PT]

    # Serve gzipped static file requested w/o the .gz extention
    RewriteCond %{HTTP:Accept-Encoding} gzip
    RewriteCond /var/www/%{REQUEST_URI}.gz -f
    RewriteRule ^(.*)$ $1.gz [L,PT]
</LocationMatch>

Alias "/logs-raw" "/var/www/logs"

<Directory "/usr/lib/python2.7/site-packages/os_loganalyze/">
    Require all granted
</Directory>

SetEnv OS_LOGANALYZE_ROOT_PATH /var/www/logs/
WSGIScriptAlias /htmlify /usr/lib/python2.7/site-packages/os_loganalyze/wsgi.py

SetEnv ARA_WSGI_TMPDIR_MAX_AGE {{ logs_wsgi_ara_tmpdir_max_age }}
SetEnv ARA_WSGI_LOG_ROOT /var/www/logs
SetEnv ARA_WSGI_DATABASE_DIRECTORY {{ logs_wsgi_ara_directory }}
WSGIScriptAliasMatch ^.*/{{ logs_wsgi_ara_directory }}(?!/ansible.sqlite) /opt/rh/rh-python35/root/usr/bin/ara-wsgi-sqlite
