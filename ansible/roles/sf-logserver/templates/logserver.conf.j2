<VirtualHost *:{{ logserver_http_port }}>
  AddType text/plain .log
  AddType text/plain .sh
  AddType text/plain .yaml
  AddType text/plain .yml

  DocumentRoot /var/www/

  <Directory "/var/www/logs/">
      Options Indexes SymLinksIfOwnerMatch
      Require all granted
      IndexOptions FancyIndexing HTMLTable NameWidth=* SuppressDescription
  </Directory>

  <FilesMatch \.gz$>
      ForceType text/plain
      AddEncoding x-gzip gz
  </FilesMatch>

  <FilesMatch \.txt\.gz$>
      ForceType text/json
      AddDefaultCharset UTF-8
      AddEncoding x-gzip gz
  </FilesMatch>
  <FilesMatch \.html\.gz$>
      ForceType text/html
      AddDefaultCharset UTF-8
      AddEncoding x-gzip gz
  </FilesMatch>
  <FilesMatch \.css\.gz$>
      ForceType text/css
      AddDefaultCharset UTF-8
      AddEncoding x-gzip gz
  </FilesMatch>
  <FilesMatch \.js\.gz$>
      ForceType text/javascript
      AddDefaultCharset UTF-8
      AddEncoding x-gzip gz
  </FilesMatch>
  <FilesMatch \.ttf\.gz$>
      ForceType application/x-font-ttf
      AddEncoding x-gzip gz
  </FilesMatch>
  <FilesMatch \.svg\.gz$>
      ForceType image/svg+xml
      AddEncoding x-gzip gz
  </FilesMatch>
  <FilesMatch \.json\.gz$>
      ForceType application/json
      AddEncoding x-gzip gz
  </FilesMatch>
  <FilesMatch \.(log|sh|yml|yaml|conf)\.gz$>
      ForceType text/plain
      AddDefaultCharset UTF-8
      AddEncoding x-gzip gz
  </FilesMatch>
  <FilesMatch \.css$>
      # mod_mime_magic is sometimes passing css files as asm sources
      # e.g css files generated by coverage reports
      ForceType text/css
  </FilesMatch>

  <LocationMatch "/{{ logs_directory_prefix }}">
      # Enable zuul-web ui to access logs
      Header set Access-Control-Allow-Origin "*"

      RewriteEngine On

      # Serve gzipped static file requested w/o the .gz extention
      RewriteCond %{HTTP:Accept-Encoding} gzip
      RewriteCond /var/www/%{REQUEST_URI}.gz -f
      RewriteRule ^(.*)$ $1.gz [L,PT]
  </LocationMatch>

  Alias "/logs-raw" "/var/www/logs"

</VirtualHost>
