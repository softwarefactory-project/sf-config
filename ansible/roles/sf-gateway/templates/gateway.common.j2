    <Directory "/var/www">
        AllowOverride None
        Require all granted
    </Directory>

    DocumentRoot /var/www/

    Alias /icons/ "/usr/share/httpd/icons/"

    <Directory "/usr/share/httpd/icons">
        Options Indexes MultiViews FollowSymlinks
        AllowOverride None
        Require all granted
    </Directory>

    <Directory "/var/www/keys">
        Options Indexes
        AllowOverride None
        Require all granted
        IndexOptions FancyIndexing HTMLTable NameWidth=* SuppressDescription
        HeaderName /static/index-header.html
    </Directory>

    RewriteEngine On
    RewriteRule ^/$ /{{ welcome_page_path }} [R]

    # Disable caching of static files
    <LocationMatch "/static">
        CacheDisable on
    </LocationMatch>
    {% if _zuul_job_version is defined %}
    Alias "/docs/zuul-jobs" "/usr/share/doc/zuul-jobs-doc-{{ _zuul_job_version.stdout.split('-')[3] }}/html"
    {% endif %}
    {% if _zuul_version is defined %}
    Alias "/docs/zuul" "/usr/share/doc/zuul-doc-{{ _zuul_version.stdout.split('-')[2] }}/html"
    {% endif %}
    {% if _nodepool_version is defined %}
    Alias "/docs/nodepool" "/usr/share/doc/nodepool-doc-{{ _nodepool_version.stdout.split('-')[2] }}/html"
    {% endif %}
    Alias "/docs/managesf" "/usr/share/doc/managesf/"
    Alias "/docs/sfmanager" "/usr/share/doc/python-sfmanager/"
    Alias "/docs/" "/usr/share/doc/software-factory/"
    Alias "/docs" "/usr/share/doc/software-factory/"
    <Directory "/usr/share/doc/">
        Require all granted
    </Directory>
    {% for directory in gateway_directories -%}
    Alias "/{{ directory.name }}" "{{ directory.path }}"
    <Directory {{ directory.path }}>
    {% for option in directory.options %}
    {{ option }}
    {% endfor -%}
    </Directory>
    {% endfor -%}
    <Directory /var/www>
        AllowOverride None
        Order allow,deny
        allow from all
    </Directory>
    <Directory /var/www/cauth>
        Order allow,deny
        Deny from all
    </Directory>
    <Directory /var/www/managesf>
        Order allow,deny
        Deny from all
    </Directory>

{% if 'gerrit' in roles %}
{% if 'cauth' in roles %}
    <LocationMatch "/r/(?!(login|logout))">
        RewriteEngine On

        # Logged in in SSO, but logged out from Gerrit
        RewriteCond %{HTTP_COOKIE} !^GerritAccount.*$ [NC]
        RewriteCond %{HTTP_COOKIE} ^.*auth_pubtkt.*$ [NC]
        RewriteRule ^(.*)$ /r/login/ [R,NC,L]

        # Logged in in Gerrit, but logged out from cauth
        <If "%{HTTP_COOKIE} !~ /.*auth_pubtkt.*/">
            # Remove GerritAccount cookie
            Header add Set-Cookie "GerritAccount='';expires='Thu, 01-Jan-1970 00:00:00 GMT';"
            RequestHeader unset Cookie
        </If>
    </LocationMatch>

    <LocationMatch "/r/login(/|$)">
        Order Allow,Deny
        Allow from all

        AuthType mod_auth_pubtkt
        TKTAuthFakeBasicAuth on
        TKTAuthLoginURL /auth/login
        TKTAuthDebug 1
        require valid-user
    </LocationMatch>
{% endif %}

    # Redirect a gerrit page that give an easy access to gitweb
    # if user does not have the GerritAccount cookie in its browser
    # This prevent the 'Not Found' 404 from Gerrit if cookie not set
    <LocationMatch "/r/gitweb.*">
        RewriteEngine On
        RewriteCond %{HTTP_COOKIE} !^.*gerritaccount.*$ [NC]
        RewriteCond %{QUERY_STRING} ^p=(.*).git;a=summary$
        RewriteRule /r/gitweb.*$ /r/#/admin/projects/%1,branches [QSD,R,L,NE]
    </LocationMatch>

{% endif %}
{% if 'grafana' in roles %}
    <LocationMatch "^/grafana/">
        RequestHeader unset X-Forwarded-User
{% if 'keycloak' in roles %}
        AuthType openid-connect
        AuthName "Grafana"
        require valid-user
        RewriteEngine On
        RewriteCond %{LA-U:REMOTE_USER} (.+)
        RewriteRule .* - [E=RU:%1,NS]
        RequestHeader set X-Forwarded-User %{RU}e
        RequestHeader unset Authorization
{% else %}
        <If "%{HTTP_COOKIE} =~ /auth_pubtkt=.*/">
            AuthType mod_auth_pubtkt
            TKTAuthLoginURL /auth/login
            TKTAuthFakeBasicAuth on
            TKTAuthDebug 1
            AuthName "Grafana"
            require valid-user
            RewriteEngine On
            RewriteCond %{LA-U:REMOTE_USER} (.+)
            RewriteRule .* - [E=RU:%1,NS]
            RequestHeader set X-Forwarded-User %{RU}e
            RequestHeader unset Authorization
        </If>
{% endif %}
    </LocationMatch>

{% endif %}
    <IfModule mod_proxy.c>
        ProxyVia On
        ProxyRequests Off

{% if 'gerrit' in roles %}
        ProxyPass /r/ {{ gerrit_internal_url }} nocanon retry=0
        ProxyPassReverse /r/ {{ gerrit_internal_url }}

{% endif %}

        <Directory /usr/share/zuul>
            DirectoryIndex index.html
            Require all granted
            Order allow,deny
            Allow from all
        </Directory>
        Alias /zuul /usr/share/zuul

{% if 'zuul' in roles %}
        RewriteRule ^/zuul/*$ /zuul/t/{{ tenant_name }}/status [R,L]

        # Rewrite api to zuul-web
        RewriteRule ^/zuul/api/tenant/(.*)/console-stream$ {{ zuul_ws_url }}/api/tenant/$1/console-stream [P,L]
        RewriteRule ^/zuul/api/(.*)$ {{ zuul_web_url }}/api/$1 [P,L]
{% endif %}
{% if tenant_deployment %}
        RewriteRule ^/zuul/*$ /zuul/status [R,L]

        SSLProxyEngine On
        <location /zuul>
            RequestHeader set Host "{{ master_sf_fqdn }}"
            ProxyPreserveHost Off
        </location>

        # Rewrite api to zuul-web
        RewriteRule ^/zuul/api/console-stream$ wss://{{ master_sf_fqdn }}/zuul/api/tenant/{{ tenant_name }}/console-stream [P,L]
        RewriteRule ^/zuul/api/(.*)$ {{ master_sf_url }}/zuul/api/tenant/{{ tenant_name }}/$1 [P,L]

{% endif %}

        # Rewrite HTML5 url to the index.html
        RewriteCond /usr/share/%{REQUEST_FILENAME} !-f
        RewriteCond /usr/share/%{REQUEST_FILENAME} !-d
        RewriteRule ^/zuul/.*$ /usr/share/zuul/index.html [L]

{% if 'managesf' in roles %}
        ProxyPass /manage/ http://managesf:20001/ retry=0 timeout=2400
        ProxyPassReverse /manage/ http://managesf:20001/ timeout=2400

{% endif %}
{% if 'etherpad' in roles %}
        ProxyPass /etherpad/ http://127.0.0.1:9001/ retry=0
        ProxyPassReverse /etherpad/ http://127.0.0.1:9001/

{% endif %}
{% if 'lodgeit' in roles %}
        ProxyPass /paste/ http://127.0.0.1:5000/paste/ retry=0
        ProxyPassReverse /paste/ http://127.0.0.1:5000/paste/
{% endif %}
{% if koji_host|default(False) %}

        ProxyPass /koji/ http://{{ koji_host }}/koji/ retry=0
        ProxyPassReverse /koji/ http://{{ koji_host }}/koji/

        ProxyPass /koji-static/ http://{{ koji_host }}/koji-static/ retry=0
        ProxyPassReverse /koji-static/ http://{{ koji_host }}/koji-static/

        ProxyPass /kojifiles/ http://{{ koji_host }}/kojifiles/ retry=0
        ProxyPassReverse /kojifiles/ http://{{ koji_host }}/kojifiles/

{% endif %}
{% if 'cgit' in roles and gateway_host != cgit_host %}
        ProxyPass /cgit/ http://{{ cgit_host }}/cgit/
        ProxyPassReverse /cgit/ http://{{ cgit_host }}/cgit/

{% endif %}
{% if 'nodepool-builder' in roles and gateway_host != nodepool_builder_host %}
        ProxyPass /nodepool-log/ http://{{ nodepool_builder_host }}/nodepool-log/
        ProxyPassReverse /nodepool-log/ http://{{ nodepool_builder_host }}/nodepool-log/
{% endif %}
{% if 'nodepool-launcher' in roles and gateway_host != nodepool_builder_host %}
    {% for nl in groups['nodepool-launcher'] %}
    ProxyPass /nodepool-launcher/{{ nl }} http://{{ hostvars[nl]['ansible_default_ipv4']['address'] }}/nodepool-launcher/logs
    ProxyPassReverse /nodepool-launcher/{{ nl }} http://{{ hostvars[nl]['ansible_default_ipv4']['address'] }}/nodepool-launcher/logs
    {% endfor %}
{% endif %}

{% if 'logserver' in roles and gateway_host != logserver_host %}
        ProxyPass /logs/ http://{{ logserver_host }}/logs/
        ProxyPassReverse /logs/ http://{{ logserver_host }}/logs/

        ProxyPass /logs-raw/ http://{{ logserver_host }}/logs-raw/
        ProxyPassReverse /logs-raw/ http://{{ logserver_host }}/logs-raw/

{% endif %}
{% if 'hound' in roles %}
        ProxyPass /codesearch/ {{ hound_internal_url }}/
        ProxyPassReverse /codesearch/ {{ hound_internal_url }}/

{% endif %}
{% if 'keycloak' in roles %}
        ProxyPass /auth/ http://{{ keycloak_host }}:{{ keycloak_http_port }}/auth/
        ProxyPassReverse /auth/ http://{{ keycloak_host }}:{{ keycloak_http_port }}/auth/

{% endif %}
        ProxyPreserveHost On
        AllowEncodedSlashes NoDecode
        <Proxy *>
            Options FollowSymLinks MultiViews
            AllowOverride All
            Order allow,deny
            allow from all
        </Proxy>

{% if 'repoxplorer' in roles %}
        RewriteRule ^/repoxplorer/$ /repoxplorer/index.html [R]
{% endif %}

{% if 'grafana' in roles %}
        RewriteRule ^/grafana$ grafana/ [R]
        ProxyPass /grafana/ {{ grafana_internal_url }}/
        ProxyPassReverse /grafana/ {{ grafana_internal_url }}/
{% endif %}
    </IfModule>


{% if 'nodepool-launcher' in roles and gateway_host != nodepool_builder_host %}
    {# if request goes to /nodepool-launcher/<hostname>/logs show the directory #}
    <Directory /var/www/nodepool-launcher/logs>
        IndexOptions FancyIndexing FoldersFirst
        Options MultiViews Indexes
        AllowOverride None
        Order allow,deny
        Allow from all
    </Directory>

    {# it should redirect /nodepool-launcher/test1 host to http://<hostip>/nodepool-launcher>/ #}
    Alias /nodepool-launcher /var/www/html/nodepool-launcher
    {% for nl in groups['nodepool-launcher'] %}
      {% if nl == inventory_hostname %}
    Alias /nodepool-launcher/{{ nl }} /var/www/html/nodepool-launcher/logs
      {% endif %}
    {% endfor %}
{% endif %}


    <Location "/dashboard">
        RewriteEngine on
        RewriteCond %{REQUEST_FILENAME} -s [OR]
        RewriteCond %{REQUEST_FILENAME} -l [OR]
        RewriteCond %{REQUEST_FILENAME} -d
        RewriteRule ^.*$ - [NC,L]

        RewriteRule ^(.*) /dashboard/index.html [NC,L]
    </location>

{% if 'keycloak' in roles %}
    <Location "/auth">
        RequestHeader add "X-forwarded-proto" "https"
        RequestHeader set x-ssl-client-cert "%{SSL_CLIENT_CERT}s"
    </Location>

{% endif %}
{% if 'managesf' in roles %}
    <Location "/manage">
        RequestHeader unset X-Remote-User
{% if 'keycloak' in roles %}
        AuthType oauth20
        Require valid-user
        RequestHeader set X-Remote-User %{REMOTE_USER}s
{% else %}
        <If "%{HTTP_COOKIE} =~ /auth_pubtkt=.*/">
            AuthType mod_auth_pubtkt
            TKTAuthLoginURL /auth/login
            TKTAuthFakeBasicAuth on
            TKTAuthDebug 1
            require valid-user
            RequestHeader set X-Remote-User %{REMOTE_USER}s
        </If>
{% endif %}
    </Location>

    <Location "/manage/about">
        Allow from All
        Satisfy Any
    </Location>

{% if 'cauth' in roles %}
    <Location "/manage/bind">
        Allow from All
        Satisfy Any
    </Location>
{% endif %}

{% endif %}
{% if 'gerrit' in roles %}
{% if 'cauth' in roles %}
    # Gerrit API fake auth requires password to set at 'password'
    # Don't give a chance to a user to change it
    <LocationMatch "^/r/accounts/.*/password.http">
      <limit PUT DELETE>
        Order Allow,Deny
        Allow from {{ fqdn }}
      </limit>
    </LocationMatch>
{% endif %}
{% endif %}

{% if authentication["authenticated_only"] %}
    # Make sure static files, docs, git and the topmenu are accessible even if
    # anonymous access is disabled. Git itself is protected by Gerrit
    <LocationMatch "^(?!/(r/.*/(info/refs|git-upload-pack)|docs|static|auth|index.html|_defconf.tgz|.well-known|zuul/api/connection/[^\/]+/payload|$))">
        Order deny,allow
        Allow from all
{% if 'keycloak' in roles %}
        AuthType openid-connect
        Require valid-user
{% else %}
        AuthType mod_auth_pubtkt
        require valid-user
        TKTAuthLoginURL /auth/login
        TKTAuthFakeBasicAuth on
        TKTAuthDebug 1
{% endif %}
    </LocationMatch>
{% endif %}
