---
- include_tasks: "{{ sf_tasks_dir }}/setup_cauth_client.yml"

- name: Remove un-needed files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/httpd/conf.d/autoindex.conf
    - /etc/httpd/conf.d/userdir.conf
    - /etc/httpd/conf.d/welcome.conf

- name: Create working directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /var/www/jobs
    - /var/www/sf
    - /var/www/dashboard
    - /var/www/dashboards_data
    - /var/www/keys
    - /var/www/.config
    - /etc/letsencrypt
    - /etc/httpd/saml2

- name: Create extra working directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    recurse: "yes"
  with_items: "{{ gateway_directories }}"
  when: gateway_directories

- name: Install sf-update-dashboard command
  copy:
    src: sf-update-dashboard.py
    dest: /usr/libexec/software-factory/sf-update-dashboard
    mode: 0555
  delegate_to: "{{ item }}"
  with_items: "{{ executor_hosts | union( groups['gateway'] ) }}"

- name: Set robots.txt
  copy:
    src: robots.txt
    dest: /var/www/robots.txt

- name: Expose public keys
  copy:
    content: "{{ localCA_pem }}"
    dest: "/var/www/keys/localCA.pem"
    mode: "0444"

- name: Add embedded TLS certificate for apache
  when: not network['use_letsencrypt']
  notify: apache reload
  copy:
    content: "{{ item.content }}\n"
    dest: "/etc/pki/tls/{{ item.path }}"
    mode: "{{ item.mode|default(0444) }}"
    setype: cert_t
    seuser: system_u
    serole: object_r
  with_items:
    - {content: "{{gateway_crt}}", path: "certs/{{ fqdn }}.crt"}
    - {content: "{{gateway_chain}}", path: "certs/{{ fqdn }}-chain.crt"}
    - {content: "{{gateway_key}}", path: "private/{{ fqdn }}.key", mode: '0400'}
  no_log: true

- name: Install config files
  copy:
    src: "{{ item.name }}"
    dest: "{{ item.path }}/{{ item.real_name|default(item.name) }}"
    mode: "{{ item.mode|default(0444) }}"
  with_items:
    - {name: base64helper, path: /usr/local/sbin, mode: '0755'}
    - {name: ssl.conf, path: /etc/httpd/conf.d}
    - {name: user_settings.html, path: /var/www/sf}
    - {name: user_settings.js, path: /var/www/sf}
    - {name: welcome.html, path: /var/www/sf}
    - {name: gerrit_dashboard.js, path: /var/www/static/js}
    - {name: jobs.js, path: /var/www/jobs}
    - {name: jobs.html, path: /var/www/jobs, real_name: index.html}

- name: Install index header
  copy:
    content: '<script type="text/javascript" src="/static/js/topmenu.js"></script>'
    dest: /var/www/static/index-header.html

- name: Install gerrit dashboard
  copy:
    src: dashboard.index.html
    dest: /var/www/dashboard/index.html
    mode: 0444

- name: Read zuul-job version
  command: rpm -q rh-python35-zuul-jobs-doc
  args:
    warn: false
  register: _zuul_job_version
  changed_when: false

- name: Read zuul version
  command: rpm -q rh-python35-zuul-doc
  args:
    warn: false
  register: _zuul_version
  changed_when: false

- name: Read nodepool version
  command: rpm -q rh-python35-nodepool-doc
  args:
    warn: false
  register: _nodepool_version
  changed_when: false

- name: Render topmenu links list
  set_fact:
    topmenu_links: "{{ lookup('template', './templates/topmenu_links.j2') }}"
  no_log: true

- name: Install templates
  template:
    src: "{{ item.name }}.j2"
    dest: "{{item.dest }}/{{ item.name }}"
    mode: "{{ item.mode | default(0444) }}"
  with_items:
    - {name: gateway.common, dest: /etc/httpd/conf.d}
    - {name: gateway.conf, dest: /etc/httpd/conf.d}
    - {name: hideci.js, dest: /var/www/static/js}
    - {name: topmenu.html, dest: /var/www}
    - {name: topmenu.js, dest: /var/www/static/js}
    - {name: menu.js, dest: /var/www/static/js}
    - {name: welcome.js, dest: /var/www/static/js}
  notify: apache reload

- name: Install Kibana SF gateway rules
  template:
    src: gateway-kibana.conf.j2
    dest: /etc/httpd/conf.d/gateway-kibana.conf
    mode: 0444
  with_items: "{{ inventory }}"
  when: '"kibana" in item["roles"]'
  notify: apache reload
  no_log: true

- name: Install repoXplorer SF gateway rules
  template:
    src: gateway-repoxplorer.conf.j2
    dest: /etc/httpd/conf.d/gateway-repoxplorer.conf
    mode: 0444
  with_items: "{{ inventory }}"
  when: '"repoxplorer" in item["roles"]'
  notify: apache reload
  no_log: true

- name: Load ssl module in apache configuration
  lineinfile:
    dest: /etc/httpd/conf.modules.d/00-ssl.conf
    line: "LoadModule ssl_module modules/mod_ssl.so"
    owner: apache
    group: apache
    mode: 0640
  notify: apache reload

- name: Add x-x509-ca-cert mime types
  lineinfile:
    dest: /etc/mime.types
    line: "application/x-x509-ca-cert                      der pem crt"
  notify: apache reload

- name: Load cache module in apache configuration
  lineinfile:
    dest: /etc/httpd/conf.modules.d/00-cache.conf
    line: "LoadModule cache_module modules/mod_cache.so"
    create: true
    state: present
    owner: apache
    group: apache
    mode: 0640
  notify: apache reload

- include_tasks: defconf.yml

- include_tasks: setup_pages.yml

- name: Start service
  systemd:
    name: httpd
    state: started
    daemon_reload: "yes"
    enabled: "yes"
