---
- include_tasks: "{{ sf_tasks_dir }}/check_version.yml"

- name: Remove un-needed files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/httpd/conf.d/autoindex.conf
    - /etc/httpd/conf.d/userdir.conf
    - /etc/httpd/conf.d/welcome.conf
    - /etc/httpd/conf.d/logserver.conf

- name: Create working directories
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /var/www/jobs
    - /var/www/sf
    - /var/www/api
    - /var/www/keys
    - /var/www/.config

- name: Dump deployment context info list
  copy:
    content: "{{ sf_context_info | default({}) | to_nice_json }}"
    dest: /var/www/api/info.json

- name: Create extra working directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    recurse: "yes"
  loop: "{{ gateway_directories }}"
  when: gateway_directories

- name: Set robots.txt
  copy:
    src: robots.txt
    dest: /var/www/robots.txt

- name: Expose public keys
  copy:
    content: "{{ localCA_pem }}"
    dest: "/var/www/keys/localCA.pem"
    mode: "0444"

- name: Add embedded TLS certificate for apache
  notify: apache reload
  copy:
    content: "{{ item.content }}\n"
    dest: "/etc/pki/tls/{{ item.path }}"
    mode: "{{ item.mode|default('0444') }}"
    setype: cert_t
    seuser: system_u
    serole: object_r
  loop:
    - {content: "{{gateway_crt}}", path: "certs/{{ fqdn }}.crt"}
    - {content: "{{gateway_chain}}", path: "certs/{{ fqdn }}-chain.crt"}
    - {content: "{{gateway_key}}", path: "private/{{ fqdn }}.key", mode: '0400'}
  when: "gateway_tls_cert_file|default('') == ''"
  no_log: show_hidden_logs == False

- name: Install config files
  copy:
    src: "{{ item.name }}"
    dest: "{{ item.path }}/{{ item.real_name|default(item.name) }}"
    mode: "{{ item.mode|default('0444') }}"
  loop:
    - {name: base64helper, path: /usr/local/sbin, mode: '0755'}
    - {name: ssl.conf, path: /etc/httpd/conf.d}

- name: Read zuul-job version
  command: rpm -q zuul-jobs-doc
  args:
    warn: false
  register: _zuul_job_version
  changed_when: false

- name: Get zuul and nodepool versions
  block:
    - name: Read zuul version
      command: cat /var/lib/software-factory/versions/zuul
      args:
        warn: false
      register: _zuul_version
      changed_when: false
      delegate_to: "{{ install_server_host }}"

    - name: Read nodepool version
      command: cat /var/lib/software-factory/versions/nodepool
      args:
        warn: false
      register: _nodepool_version
      changed_when: false
      delegate_to: "{{ install_server_host }}"
  when: "'zuul' in roles"

- name: Install templates
  template:
    src: "{{ item.name }}.j2"
    dest: "{{item.dest }}/{{ item.name }}"
    mode: "{{ item.mode | default('0444') }}"
  loop:
    - {name: gateway.common, dest: /etc/httpd/conf.d}
    - {name: gateway.conf, dest: /etc/httpd/conf.d}
    - {name: headers.conf, dest: /etc/httpd/conf.d}
    - {name: hideci.js, dest: /var/www/static/js}
  notify: apache reload

- name: Install Opensearch Dashboards SF gateway rules
  template:
    src: gateway-opensearch-dashboards.conf.j2
    dest: /etc/httpd/conf.d/gateway-opensearch-dashboards.conf
    mode: '0444'
  when: '"opensearch-dashboards" in roles or external_opensearch_dashboards_host'
  notify: apache reload

- name: Delete old Kibana configuration
  file:
    path: /etc/httpd/conf.d/gateway-kibana.conf
    state: absent
  when: '"kibana" in roles or external_opensearch_dashboards_host is defined'
  notify: apache reload

- name: Create autologin empty file
  file:
    path: /etc/httpd/conf.d/opensearch_dashboards_autologin.conf
    state: touch
    mode: '0444'
  when: readonly_user_autologin is defined and readonly_user_autologin

- name: Add server status configuration file
  template:
    src: server-status.conf.j2
    dest: /etc/httpd/conf.d/server-status.conf
    mode: '0444'
  when: apache_server_status is defined and apache_server_status
  notify: apache reload

- name: Configure httpd for nodepool services
  block:
    - name: Create working directory
      file:
        path: /var/www/nodepool
        state: directory

    - name: Install nodepool index.html template
      template:
        src: nodepool-index.html.j2
        dest: /var/www/nodepool/index.html
        mode: '0644'
  when: "'nodepool' in roles"

- name: Load ssl module in apache configuration
  lineinfile:
    dest: /etc/httpd/conf.modules.d/00-ssl.conf
    line: "LoadModule ssl_module modules/mod_ssl.so"
    owner: apache
    group: apache
    mode: '0640'
  notify: apache reload

- name: Add x-x509-ca-cert mime types
  lineinfile:
    dest: /etc/mime.types
    line: "application/x-x509-ca-cert                      der pem crt"
  notify: apache reload

- name: Load cache module in apache configuration
  lineinfile:
    dest: /etc/httpd/conf.modules.d/00-cache.conf
    line: "LoadModule cache_module modules/mod_cache.so"
    create: true
    state: present
    owner: apache
    group: apache
    mode: '0640'
  notify: apache reload

- include_tasks: defconf.yml

- include_tasks: setup_pages.yml

- name: Start service
  systemd:
    name: httpd
    state: started
    daemon_reload: "yes"
    enabled: "yes"
