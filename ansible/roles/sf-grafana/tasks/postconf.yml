---
- name: Wait for db initialization
  wait_for:
    port: 3000
    host: '{{ grafana_host }}'

- name: Get datasources
  uri:
    url: '{{ grafana_internal_datasource_url }}'
    method: GET
    user: admin
    password: '{{ grafana_admin_password }}'
    force_basic_auth: "yes"
  register: datasources

- name: set datasources fact
  set_fact:
    grafana_datasources: "{{ datasources.json | default([]) | map(attribute='name') | list }}"

- name: Configure influxdb datasource
  uri:
    url: '{{ grafana_internal_datasource_url }}'
    method: POST
    user: admin
    password: '{{ grafana_admin_password }}'
    body: '{{ grafana_influxdb_data_source | to_json }}'
    body_format: json
    force_basic_auth: "yes"
  when: grafana_influxdb_data_source.name not in grafana_datasources

- name: Configure graphite-api datasource
  uri:
    url: '{{ grafana_internal_datasource_url }}'
    method: POST
    user: admin
    password: '{{ grafana_admin_password }}'
    body: '{{ grafana_graphite_api_data_source | to_json }}'
    body_format: json
    force_basic_auth: "yes"
  when: grafana_graphite_api_data_source.name not in grafana_datasources

- name: Create grafyaml config directory
  file:
    path: /etc/grafyaml
    state: directory
  delegate_to: '{{ install_server_host }}'

- include_tasks: postconf_grafyaml_api_key.yml

- include_vars:
    file: /var/lib/software-factory/bootstrap-data/secrets.yaml
  when: grafyaml_apikey is not defined

- name: Configure grafyaml
  template:
    src: grafyaml.conf.j2
    dest: /etc/grafyaml/grafyaml.conf
    owner: root
    group: root
    mode: 0444
  delegate_to: '{{ install_server_host }}'
