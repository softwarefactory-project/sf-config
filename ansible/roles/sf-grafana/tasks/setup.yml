---
- include: '{{ sf_tasks_dir }}/create_user.yml user_name=grafana'

- name: Configure grafana.ini
  ini_file:
    dest: /etc/grafana/grafana.ini
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  with_items:
    - {section: server, option: http_port, value: '{{ grafana_http_port }}'}
    - {section: server, option: root_url, value: '{{ grafana_server_root_url }}'}
    - {section: database, option: type, value: '{{ grafana_database_type }}'}
    - {section: database, option: host, value: '{{ grafana_mysql_host }}:{{ grafana_mysql_port }}'}
    - {section: database, option: name, value: '{{ grafana_mysql_db }}'}
    - {section: database, option: user, value: '{{ grafana_mysql_user }}'}
    - {section: database, option: password, value: '{{ grafana_mysql_password }}'}
    - {section: users, option: allow_sign_up, value: '{{ grafana_users_allow_sign_up }}'}
    - {section: auth.anonymous, option: enabled, value: '{{ grafana_auth_anonymous_enabled }}'}
    - {section: auth.anonymous, option: org_role , value: '{{ grafana_auth_anonymous_org_role }}'}
    - {section: auth.proxy, option: enabled, value: '{{ grafana_auth_proxy_enabled }}'}
    - {section: auth.proxy, option: header_name, value: '{{ grafana_auth_proxy_header_name }}'}
    - {section: auth.proxy, option: header_property, value: '{{ grafana_auth_proxy_header_property }}'}
    - {section: auth.proxy, option: auto_sign_up, value: '{{ grafana_auth_proxy_auto_sign_up }}'}
    - {section: auth.basic, option: enabled, value: '{{ grafana_auth_basic_enabled }}'}
    - {section: security, option: admin_password, value: '{{ grafana_admin_password }}'}
  notify: restart grafana
  no_log: true

- name: Fix systemd file to wait for mysql
  ini_file:
    dest: /lib/systemd/system/grafana-server.service
    section: Service
    option: ExecStartPre
    value: /usr/libexec/wait4mariadb
  register: grafana_service

- name: Install sf top menu
  lineinfile:
    dest: /usr/share/grafana/public/views/index.html
    insertafter: '<body ng-cloak>'
    line: '        <script type="text/javascript" src="/static/js/topmenu.js"></script>'
  notify: restart grafana

- name: Start service
  systemd:
      name: grafana-server
      state: started
      daemon_reload: yes
      enabled: yes

- name: Wait for db initialization
  wait_for:
      port: 3000
      host: '{{ grafana_host }}'

- name: Get datasources
  uri:
      url: '{{ grafana_internal_datasource_url }}'
      method: GET
      user: admin
      password: '{{ grafana_admin_password }}'
      force_basic_auth: yes
  register: datasources

- name: set datasource fact
  set_fact:
      grafana_datasources: "{{ datasources.json | default([]) | map(attribute='name') | list }}"

- name: Configure datasource
  uri:
      url: '{{ grafana_internal_datasource_url }}'
      method: POST
      user: admin
      password: '{{ grafana_admin_password }}'
      body: '{{ grafana_data_source | to_json }}'
      body_format: json
      force_basic_auth: yes
  when: grafana_data_source.name not in grafana_datasources

- name: Install default dashboard
  template:
    src: sf-system-metrics.json
    dest: /usr/share/grafana/public/dashboards/home.json
    owner: root
    group: root
    mode: 0444
  notify: restart grafana
