---
- include_tasks: "{{ sf_tasks_dir }}/check_version.yml"

- include_tasks: "{{ sf_tasks_dir }}/create_user.yml"
  vars:
    user_name: grafana

- name: Configure grafana.ini
  ini_file:
    dest: /etc/grafana/grafana.ini
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  loop:
    - {section: server, option: http_port, value: '{{ grafana_http_port }}'}
    - {section: server, option: root_url, value: '{{ grafana_server_root_url }}'}
    - {section: database, option: type, value: '{{ grafana_database_type }}'}
    - {section: database, option: host, value: '{{ grafana_mysql_host }}:{{ grafana_mysql_port }}'}
    - {section: database, option: name, value: '{{ grafana_mysql_db }}'}
    - {section: database, option: user, value: '{{ grafana_mysql_user }}'}
    - {section: database, option: password, value: '{{ grafana_mysql_password }}'}
    - {section: users, option: allow_sign_up, value: '{{ grafana_users_allow_sign_up }}'}
    - {section: auth.anonymous, option: enabled, value: '{{ grafana_auth_anonymous_enabled }}'}
    - {section: auth.anonymous, option: org_role, value: '{{ grafana_auth_anonymous_org_role }}'}
    - {section: security, option: admin_password, value: '{{ grafana_admin_password }}'}
  register: _grafana_ini
  no_log: show_hidden_logs == False

- name: Configure authentication
  ini_file:
    dest: /etc/grafana/grafana.ini
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  loop:
    - {section: auth.proxy, option: enabled, value: '{{ grafana_auth_proxy_enabled }}'}
    - {section: auth.proxy, option: header_name, value: '{{ grafana_auth_proxy_header_name }}'}
    - {section: auth.proxy, option: header_property, value: '{{ grafana_auth_proxy_header_property }}'}
    - {section: auth.proxy, option: auto_sign_up, value: '{{ grafana_auth_proxy_auto_sign_up }}'}
    - {section: auth.basic, option: enabled, value: '{{ grafana_auth_basic_enabled }}'}
  register: _grafana_ini_auth
  no_log: show_hidden_logs == False
  when: '"cauth" in roles'

- name: Configure authentication
  ini_file:
    dest: /etc/grafana/grafana.ini
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  loop:
    - {section: auth.generic_oauth, option: enabled, value: 'true'}
    - {section: auth.generic_oauth, option: name, value: 'Software Factory SSO'}
    - {section: auth.generic_oauth, option: client_id, value: 'grafana'}
    - {section: auth.generic_oauth, option: client_secret, value: '{{ keycloak_grafana_client_secret }}'}
    - {section: auth.generic_oauth, option: scopes, value: 'openid;profile'}
    - {section: auth.generic_oauth, option: auth_url, value: 'https://{{ fqdn }}/auth/realms/{{ keycloak_default_realm }}/protocol/openid-connect/auth'}
    - {section: auth.generic_oauth, option: token_url, value: 'https://{{ fqdn }}/auth/realms/{{ keycloak_default_realm }}/protocol/openid-connect/token'}
    - {section: auth.generic_oauth, option: api_url, value: 'https://{{ fqdn }}/auth/realms/{{ keycloak_default_realm }}/protocol/openid-connect/userinfo'}
  register: _grafana_ini_auth
  no_log: show_hidden_logs == False
  when: '"keycloak" in roles'

# See https://community.grafana.com/t/grafana-will-not-start-after-update-from-4-1-3-to-4-3-6/5212/2
# and https://github.com/puppetlabs/puppetlabs-pe_metrics_dashboard/issues/12
- name: Fix /var/run/grafana issues
  file:
    path: /var/run/grafana
    owner: grafana
    group: grafana
    mode: 0755
    state: directory

- name: Check if grafana is running
  command: systemctl is-active -q grafana-server
  register: _grafana_service
  failed_when: _grafana_service.rc not in [0, 3]
  changed_when: false

- name: Restart service if required
  service:
    name: grafana-server
    state: restarted
  failed_when: false
  when:
    - _grafana_service.rc == 0
    - _grafana_ini is changed
    - _grafana_ini_auth is changed

- name: Fix systemd file to wait for mysql
  ini_file:
    dest: /lib/systemd/system/grafana-server.service
    section: Service
    option: ExecStartPre
    value: /usr/libexec/software-factory/wait4mariadb

- name: Create metrics directory on the install server
  file:
    path: '{{ grafyaml_metrics }}'
    state: directory
    mode: 0755
  delegate_to: '{{ install_server_host }}'

- name: Install update-grafana-graphs script
  template:
    src: update-grafana-graphs.sh.j2
    dest: /usr/bin/update-grafana-graphs.sh
    owner: root
    group: root
    mode: 0755
  delegate_to: '{{ install_server_host }}'

# Retry start to mitigate initial service start bug with grafana-5.1.3-1
- name: Start grafana service
  systemd:
    name: grafana-server
    state: started
    daemon_reload: "yes"
    enabled: "yes"
  failed_when: false

- include_tasks: grafana_configuration.yml
