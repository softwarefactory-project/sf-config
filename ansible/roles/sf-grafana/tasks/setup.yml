---
- include: "{{ sf_tasks_dir }}/create_user.yml user_name=grafana"

- name: Configure grafana.ini
  ini_file:
    dest: /etc/grafana/grafana.ini
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - {section: server, option: http_port, value: "{{ grafana_server_http_port }}"}
    - {section: server, option: root_url, value: "{{ grafana_server_root_url }}"}
    - {section: database, option: type, value: "{{ grafana_database_type }}"}
    - {section: database, option: host, value: "{{ grafana_mysql_host }}:{{ grafana_mysql_port }}"}
    - {section: database, option: name, value: "{{ grafana_mysql_db }}"}
    - {section: database, option: user, value: "{{ grafana_mysql_user }}"}
    - {section: database, option: password, value: "{{ grafana_mysql_password }}"}
    - {section: users, option: allow_sign_up, value: "{{ grafana_users_allow_sign_up }}"}
    - {section: auth.anonymous, option: enabled, value: "{{ grafana_auth_anonymous_enabled }}"}
    - {section: auth.anonymous, option: org_role , value: "{{ grafana_auth_anonymous_org_role }}"}
    - {section: auth.proxy, option: enabled, value: "{{ grafana_auth_proxy_enabled }}"}
    - {section: auth.proxy, option: header_name, value: "{{ grafana_auth_proxy_header_name }}"}
    - {section: auth.basic, option: enabled, value: "{{ grafana_auth_basic_enabled }}"}
    - {section: security, option: admin_password, value: "{{ grafana_admin_password }}"}
  notify: restart grafana

- name: "Fix systemd file to wait for mysql"
  ini_file:
    dest: /lib/systemd/system/grafana-server.service
    section: Service
    option: ExecStartPre
    value: /usr/libexec/wait4mariadb
  register: grafana_service

- name: Start service
  systemd:
      name: grafana-server
      state: started
      daemon_reload: yes
      enabled: yes

- name: "Wait for db initialization"
  wait_for: port=3000

- name: Get datasources
  uri:
      url: 'http://127.0.0.1:3000/api/datasources'
      method: GET
      user: admin
      password: admin
      force_basic_auth: yes
  register: datasources

- name: set datasource fact
  set_fact:
      grafana_datasources: "{{ datasources.json | default([]) | map(attribute='name') | list }}"

- name: Configure datasource
  uri:
      url: 'http://127.0.0.1:3000/api/datasources'
      method: POST
      user: admin
      password: admin
      body: '{{ grafana_data_source | to_json }}'
      body_format: json
      force_basic_auth: yes
  when: grafana_data_source.name not in grafana_datasources
