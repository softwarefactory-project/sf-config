---
- name: Check if container exists
  command: "podman container exists {{ item.service }}"
  register: _container
  failed_when: _container.rc not in [0, 1]

- name: "Manage container update for {{ item.service }}"
  block:
    - name: "Read installed container version for {{ item.service }}"
      command: "cat /var/lib/software-factory/versions/{{ item.service }}"
      changed_when: false
      failed_when: false
      register: _installed_container

    - name: "Touch updated file for {{ item.service }}"
      file:
        path: "/var/lib/software-factory/versions/{{ item.service }}-updated"
        state: touch
      when:
        - item.image != _installed_container.stdout
        - item.service in ((zuul_services | default([])) + (nodepool_services | default([])))
      register: _version

    - name: "Execute upgrade tasks for {{ item.service }}"
      include_role:
        name: sf-{{ role_package }}
        tasks_from: upgrade.yml
      when: item.image != _installed_container.stdout
  when: _container.rc == 0
