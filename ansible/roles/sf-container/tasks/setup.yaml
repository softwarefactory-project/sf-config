---
- name: "Check if {{ item.service }} container exists"
  command: "podman container exists {{ item.service }}"
  ignore_errors: yes
  register: _container_exists
  changed_when: false
  failed_when: _container_exists.rc not in [0, 1]

- name: "Create container for {{ item.service }}"
  block:
    - name: "Create {{ item.service }} container"
      shell: "/usr/local/bin/container-{{ item.service }}.sh > /var/log/software-factory/container-{{ item.service }}.log"
  rescue:
    - name: "Dump {{ item.service }} service state for debug"
      vars:
        debug_log: "/var/log/software-factory/container-{{ item.service }}-debug.log"
      shell: |
        echo "<<< podman container status >>>" >> {{ debug_log }}
        podman ps -a >> {{ debug_log }}
        echo "<<< service status >>>" >> {{ debug_log }}
        systemctl status {{ item.service }} >> {{ debug_log }}
        echo "<<< service listening >>>" >> {{ debug_log }}
        netstat -nltpu >> {{ debug_log }}
        echo "<<< trying to get container logs >>>" >> {{ debug_log }}
        podman logs {{ item.service }} >> {{ debug_log }}
        echo "<<< end debug logs >>>" >> {{ debug_log }}
      ignore_errors: true
  when: _container_exists.rc != 0

- name: "Install {{ item.service }} service file"
  template:
    src: service.j2
    dest: "/etc/systemd/system/{{ item.service }}.service"
  register: _container_service

- name: "Enable {{ item.service }} service"
  command: "systemctl daemon-reload"
  when: "_container_service is changed"

- name: Write installed container version
  copy:
    content: "{{ item.image }}"
    dest: "/var/lib/software-factory/versions/{{ item.service }}"
