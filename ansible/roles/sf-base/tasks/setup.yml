---
- name: Add FQDN to prompt
  copy:
    src: prompt.sh
    dest: /etc/profile.d/prompt.sh

- name: Disable cloud-init
  service:
    name: "{{ item }}"
    state: stopped
    enabled: "no"
  with_items:
    - cloud-init
    - cloud-init-local
    - cloud-config
    - cloud-final
  failed_when: "False"

- name: Start haveged
  service:
    name: haveged
    state: started
    enabled: "yes"

- name: Start rsyslogd
  service:
    name: rsyslog
    state: started
    enabled: "yes"

- name: Disable DNS lookup in sshd
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '.*UseDNS.*'
    line: "UseDNS no"
  register: sshd_config

- name: Restart sshd
  service:
    name: sshd
    state: restarted
    enabled: "yes"
  when: sshd_config is changed

- name: Disable StrictHostKeyChecking
  lineinfile:
    dest: /etc/ssh/ssh_config
    line: "        StrictHostKeyChecking no"
    insertafter: "^Host *$"

- name: Set selinux mode
  selinux:
    policy: targeted
    state: permissive

- name: Set sysctl values
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  with_items:
    - {name: net.ipv4.ip_forward, value: 0}
    - {name: net.ipv4.ip_dynaddr, value: 0}
    - {name: net.ipv4.tcp_ecn, value: 0}
    - {name: net.ipv4.conf.default.rp_filter, value: 1}
    - {name: net.ipv4.conf.all.rp_filter, value: 1}
    - {name: net.ipv4.tcp_syncookies, value: 1}
    - {name: net.ipv4.conf.all.accept_source_route, value: 0}
    - {name: net.ipv4.conf.default.accept_source_route, value: 0}
    - {name: net.ipv4.conf.all.accept_redirects, value: 0}
    - {name: net.ipv4.conf.default.accept_redirects, value: 0}
    - {name: net.ipv4.conf.all.secure_redirects, value: 0}
    - {name: net.ipv4.conf.default.secure_redirects, value: 0}
    - {name: net.ipv4.icmp_echo_ignore_broadcasts, value: 1}
    - {name: kernel.sysrq, value: 0}

- name: Start auditd
  systemd:
    name: auditd
    enabled: "yes"
    state: started

- name: Manage /etc/hosts
  template:
    src: "{{ sf_templates_dir }}/etc-hosts.j2"
    dest: /etc/hosts
    mode: 0644
  when: manage_etc_hosts|default(true)

- name: Cleanup known_hosts
  known_hosts:
    name: "{{ item }}"
    state: absent
  with_items:
    - '[192.168.135.101]:29418'
    - '[localhost]:29418'

- name: Disable root password login
  user:
    name: root
    password: "*"

- name: Remove requiretty from sudoers
  lineinfile:
    dest: /etc/sudoers
    state: absent
    regexp: "^Defaults.*requiretty"

- name: Configure install-server access
  authorized_key:
    user: root
    key: "{{ service_rsa_pub }}"

- name: Set selinux policies for httpd
  seboolean:
    name: "{{ item }}"
    state: "yes"
    persistent: "yes"
  when: ansible_selinux.status == "enabled"
  with_items:
    - httpd_can_network_connect
    - httpd_can_network_connect_db
    - logging_syslogd_can_sendmail

- name: Configure ntp server
  template:
    src: ntp.conf.j2
    dest: /etc/ntp.conf
  register: ntp_config

- name: Start ntpd
  service:
    name: ntpd
    enabled: true
    state: restarted
  when: ntp_config is changed

- name: Add localCA to pki trust
  copy:
    content: "{{ localCA_pem }}"
    dest: "/etc/pki/ca-trust/source/anchors/localCA.pem"
    mode: 0644
    owner: root
    group: root
  register: new_crt

- name: Trust crt
  shell: update-ca-trust
  when: new_crt is changed

- name: Check for python-requests
  stat:
    path: /usr/lib/python2.7/site-packages/requests/
  register: _python_request

- name: Update CA list for python-requests
  copy:
    src: /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt
    dest: "{{ item }}/cacert.pem"
    mode: 0444
    owner: root
    group: root
  when:
    - _python_request.stat.exists
    - new_crt is changed
  with_items:
    - /usr/lib/python2.7/site-packages/requests/
