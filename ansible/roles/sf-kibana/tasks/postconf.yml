---
- name: Wait for service
  wait_for:
    host: '{{ kibana_host }}'
    port: '{{ kibana_http_port }}'
    delay: 10
    timeout: 600

- name: Check if bundle js top menu patch was applied
  command: grep -q "loadTopmenu" /usr/share/kibana/optimize/bundles/kibana.bundle.js
  register: kibana_patch_bundle_js
  failed_when: kibana_patch_bundle_js.rc != 0 and kibana_patch_bundle_js.rc != 1
  changed_when: false

- name: Check if style css top menu patch_style_ was applied
  command: grep -q "loadTopmenu" /usr/share/kibana/optimize/bundles/kibana.style.css
  register: kibana_patch_style_css
  failed_when: kibana_patch_style_css.rc != 0 and kibana_patch_style_css.rc != 1
  changed_when: false

- name: Patch kibana bundle js file
  lineinfile:
    dest: /usr/share/kibana/optimize/bundles/kibana.bundle.js
    line: "{{ kibana_bundle_js_patch }}"
  when: kibana_patch_bundle_js.rc == 1

- name: Patch kibana style css file
  lineinfile:
    dest: /usr/share/kibana/optimize/bundles/kibana.style.css
    line: "{{ kibana_style_css_patch }}"
  when: kibana_patch_style_css.rc == 1

- name: Check if logstash default index pattern exists
  uri:
    url: '{{ kibana_internal_url }}/api/saved_objects/index-pattern/logstash'
    method: GET
    status_code: 200, 404
    headers:
      kbn-xsrf: true
  register: json_response

- name: Create logstash default index pattern
  uri:
    url: '{{ kibana_internal_url }}/api/saved_objects/index-pattern/logstash'
    method: POST
    body_format: json
    body: '{
            "attributes": {
              "title": "logstash-*",
              "timeFieldName": "@timestamp"
            }
          }'
    status_code: 200
    headers:
      kbn-xsrf: true
  when: json_response.status == 404
