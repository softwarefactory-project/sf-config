---
- name: Check container image version
  include_role:
    name: sf-container
    tasks_from: check_version.yaml
  loop: "{{ opensearch_components }}"

- name: Remove old node directory when moving to Opensearch
  file:
    path: "{{ elk_data_dir }}"
    state: absent
  when:
    - sf_previous_version < 3.7

- name: Create cert dir
  file:
    path: "{{ item }}"
    state: directory
    recurse: true
    owner: "{{ owner }}"
    group: "{{ group }}"
  loop:
    - "{{ elk_stack_certs }}"
    - "{{ elk_data_dir }}"
    - "{{ elk_log_dir }}"
    - "{{ elk_log_dir }}/others"

- name: Rename Opensearch admin key
  copy:
    src: "{{ elastic_admin_key }}"
    dest: "{{ elastic_admin_key }}-default"
  vars:
    elastic_admin_key: /var/lib/software-factory/bootstrap-data/certs/opensearch-admin.key
  delegate_to: "{{ install_server_host }}"

- name: Convert opensearch admin private key to pkcs8
  shell: |
    openssl pkcs8 -in {{ sf_cert_path }}/opensearch-admin.key-default -topk8 -out {{sf_cert_path }}/opensearch-admin.key -nocrypt
  vars:
    sf_cert_path: /var/lib/software-factory/bootstrap-data/certs
  delegate_to: "{{ install_server_host }}"

- name: Copy certs
  copy:
    src: "/var/lib/software-factory/bootstrap-data/certs/{{ item }}"
    dest: "{{ elk_stack_certs }}/{{ item }}"
    mode: "0644"
    owner: "{{ owner }}"
    group: "{{ group }}"
  loop:
    - opensearch-admin.crt
    - opensearch-admin.key
    - localCA.pem

# This is required to set opendistro_security.authcz.elasticsearch_dn
- name: Take opensearch subject
  shell: |
    openssl x509 -subject -nameopt RFC2253 -noout -in {{ elk_stack_certs }}/opensearch-admin.crt | sed 's/subject= //g' | sed 's/subject=//g'
  register: elk_cert_subject

# https://opensearch.org/docs/opensearch/install/important-settings/
- name: Set important settings for Opensearch container
  sysctl:
    name: vm.max_map_count
    value: "262144"
    state: present
    reload: true

# Setup ELK stack users
- include_tasks: create_users.yml

- name: Create reconfiguration script
  copy:
    content: >-
      #!/bin/bash

      podman exec opensearch
      bash -c 'JAVA_HOME={{ opensearch_container_dir }}/jdk
      {{ opensearch_container_dir }}/plugins/opensearch-security/tools/securityadmin.sh
      -cd {{ opensearch_container_securityconfig_dir }}/
      -icl -nhnv -cacert {{ opensearch_container_config_dir }}/certificates/localCA.pem
      -cert {{ opensearch_container_config_dir }}/certificates/opensearch-admin.crt
      -key {{ opensearch_container_config_dir }}/certificates/opensearch-admin.key
      -h {{ ansible_default_ipv4.address }}'
    dest: /usr/local/bin/reconfigure-opensearch.sh
    mode: '0755'

- name: Set the security plugin configuration
  template:
    src: "{{ item }}.j2"
    dest: "{{ elk_config_dir }}/{{ item }}"
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: "0640"
  loop:
    - internal_users.yml
    - tenants.yml
    - config.yml
    - roles.yml
    - roles_mapping.yml
    - action_groups.yml
    - nodes_dn.yml
    - whitelist.yml
  notify:
    - ensure started opensearch
    - wait for opensearch service
    - reconfigure security plugin in containers

- name: Ensure old curator cron absent
  cron:
    name: "Delete old logstash indexes"
    state: absent

- name: Create log4j2.properties file
  copy:
    src: log4j2.properties
    dest: "/etc/opensearch/log4j2.properties"
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: "0640"
  notify:
    - ensure started opensearch
    - wait for opensearch service

- name: Configure Opensearch
  template:
    src: opensearch-config.yml.j2
    dest: "{{ elk_config_dir }}/opensearch.yml"
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: "0644"
  notify:
    - restart opensearch
    - ensure started opensearch
    - wait for opensearch service
    - reconfigure security plugin in containers

- name: Get opensearch uid
  command: id -u opensearch
  register: _opensearch_uid

- name: Expose opensearch uid
  set_fact:
    opensearch_uid: "{{ _opensearch_uid.stdout }}"

- name: Create container - Opensearch
  include_role:
    name: sf-container
    tasks_from: setup.yaml
  loop: "{{ opensearch_components }}"

- name: Ensure we restart the service when the fqdn is updated
  service:
    name: opensearch
    state: stopped
  when: update_fqdn

- name: Ensure the service is started
  service:
    name: opensearch
    state: started
    enabled: "yes"

# NOTE: Below tasks comes from handlers, but they needs to be executed now,
# because Opensearch and Opensearch Dashboards services can be deployed in
# wrong order, so the handlers from Dashboards role will wait for Opensearch
# to be up and running, where Opensearch did not synchronize the security
# plugin yet.
- name: wait for opensearch service
  uri:
    url: "{{ opensearch_internal_url }}"
    method: GET
    validate_certs: false
    status_code: "401"
  register: _opensearch_service_status
  until: "(_opensearch_service_status is successful) and (_opensearch_service_status.status == 401)"
  retries: 30
  delay: 10

- name: reconfigure security plugin in containers
  command: /usr/local/bin/reconfigure-opensearch.sh
