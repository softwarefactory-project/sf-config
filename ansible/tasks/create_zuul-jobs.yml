- stat: path=/root/zuul-jobs
  register: zuul_jobs_done

- block:
  - name: Check if repository exists
    command: python -c "import requests; print('zuul-jobs' in requests.get('{{ managesf_internal_url }}/resources').json().get('resources', {}).get('repos', {}))"
    register: jobs_resource

  - name: Create repository
    command: chdir=/root/config {{ item }}
    with_items:
      - git fetch --all
      - git reset --hard origin/master --
      - git clean -f -x -d
      - /usr/share/sf-config/scripts/create_project_resources.py --repo zuul-jobs --core admin@{{ fqdn }} resources/_zuul-jobs.yaml
      - /usr/local/bin/resources.sh direct_apply /root/empty_resources.yaml resources/_zuul-jobs.yaml
      - git add resources/_zuul-jobs.yaml
      - git commit -m 'Create zuul-jobs repository'
      - git push gerrit master
    when: jobs_resource.stdout == 'False'

  - name: Create a temporary clone directory
    command: mktemp -d
    register: jobs_tmp

  - name: Clone the zuul-jobs repository
    git:
      repo: git+ssh://gerrit/zuul-jobs
      dest: "{{ jobs_tmp.stdout }}"

  - name: Sync /usr/share/sf-config/zuul-jobs
    command: "rsync -a /usr/share/sf-config/zuul-jobs/ {{ jobs_tmp.stdout }}/"

  - name: Change logserver ip in base/posts
    command: "sed -i 's/LOGSERVER/{{ logserver_host }}/' {{ jobs_tmp.stdout }}/playbooks/base/post.yaml"

  - name: Push zuul jobs repo
    command: git {{ item }} chdir={{ jobs_tmp.stdout }}
    with_items:
      - "add -A"
      - "commit -m 'Initialize zuul-jobs repository'"
      - "push origin master"

  - name: Save zuul jobs repo
    command: "mv {{ jobs_tmp.stdout }} /root/zuul-jobs"
  when: zuul_jobs_done.stat.exists != True
