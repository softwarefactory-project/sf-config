# This file is managed by ansible, don't edit
#
# This defines some macros adapted from
#    openstack-infra/project-config/jenkins/jobs/macros.yaml

- builder:
    name: prepare-workspace
    builders:
      - shell: |
          # If this is called in a periodic job, these will not be set
          echo "Use default for ZUUL_BRANCH and ZUUL_REF if needed"
          export ZUUL_BRANCH=${ZUUL_BRANCH:-master}
          export ZUUL_REF=${ZUUL_REF:-None}
          # In the post pipeline ZUUL_REF is master but does not behave as we want
          # So fall back on None
          [ "$ZUUL_REF" = "master" ] && ZUUL_REF=None
          echo "Clean workspace"
          rm -Rf ./*
          echo "Clone $ZUUL_PROJECT"
          zuul-cloner https://{{ fqdn }}/r $ZUUL_PROJECT

- publisher:
    name: email-admin
    publishers:
      - email:
          recipients: {{ network.admin_mail_forward }}

- publisher:
    name: console-log
    publishers:
      - scp:
          site: '{{ zuul_default_log_site|default('sflogs') }}'
          files:
            - target: '$LOG_PATH'
              copy-console: true
              copy-after-failure: true

- publisher:
    name: artifacts-dir
    publishers:
      - scp:
          site: '{{ zuul_default_log_site|default('sflogs') }}'
          files:
            - target: '$LOG_PATH'
              source: 'artifacts/**'
              keep-hierarchy: true
              copy-after-failure: true

- publisher:
    name: pages-dir
    publishers:
      - scp:
          site: 'pages'
          files:
            - target: '$ZUUL_PROJECT'
              source: 'pages/**'
              keep-hierarchy: true
              copy-after-failure: true

- publisher:
    name: zuul-swift-upload
    publishers:
      - postbuildscript:
          builders:
      	    - shell: |
	        # Publish artifacts on a Swift server
		/usr/bin/zuul-swift-upload --name artifacts --delete-after 0 artifacts
          script-only-if-succeeded: False
          script-only-if-failed: False

- job-template:
    name: '{name}-unit-tests'
    builders:
      - prepare-workspace
      - shell: cd $ZUUL_PROJECT && ./run_tests.sh
    publishers:
      - console-log
    node: '{node}'

- job-template:
    name: '{name}-functional-tests'
    builders:
      - prepare-workspace
      - shell: cd $ZUUL_PROJECT && ./run_functional-tests.sh
    publishers:
      - console-log
    node: '{node}'
